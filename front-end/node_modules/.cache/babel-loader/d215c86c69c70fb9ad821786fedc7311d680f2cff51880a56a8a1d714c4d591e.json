{"ast":null,"code":"export class Modelisation {\n  constructor(data) {\n    this.data = data;\n  }\n\n  /**\r\n   * @description composant Bonjour\r\n     * @return { object } Returns dataFormated after modelisation\r\n   */\n\n  formatUserName() {\n    const dataFormated = this.data.userInfos.firstName;\n    return dataFormated;\n  }\n\n  /**\r\n   * @description composant Energie\r\n     * @return { object } Returns dataFormated after modelisation\r\n   */\n\n  formatDataEnergy() {\n    const dataFormated = this.data.keyData;\n    return dataFormated;\n  }\n\n  /**\r\n   * @description composant graphique\r\n     * @return { object } Returns dataFormated after modelisation\r\n   */\n  formatDataActivity() {\n    var _this$data;\n    const dataFormated = (_this$data = this.data) === null || _this$data === void 0 ? void 0 : _this$data.sessions.map((item, index) => {\n      return {\n        name: index + 1,\n        uv: item.kilogram,\n        pv: item.calories\n      };\n    });\n    return dataFormated;\n  }\n\n  /**\r\n   * @description composant Diagramme courbe\r\n     * @return { object } Returns dataFormated after modelisation\r\n   */\n  formatDataSessions() {\n    var _this$data2;\n    const dataFormated = (_this$data2 = this.data) === null || _this$data2 === void 0 ? void 0 : _this$data2.sessions.map(item => {\n      // convertit les nombres en jours\n      switch (item.day) {\n        case 1:\n          item.day = 'L';\n          break;\n        case 2:\n          item.day = 'M';\n          break;\n        case 3:\n          item.day = 'M';\n          break;\n        case 4:\n          item.day = 'J';\n          break;\n        case 5:\n          item.day = 'V';\n          break;\n        case 6:\n          item.day = 'S';\n          break;\n        case 7:\n          item.day = 'D';\n          break;\n        default:\n      }\n      return {\n        name: item.day,\n        pv: item.sessionLength\n      };\n    });\n    return dataFormated;\n  }\n\n  /**\r\n   * @description composant Diagramme Toile\r\n     * @return { object } Returns dataFormated after modelisation\r\n   */\n  formatDataRadarChart() {\n    var _this$data3;\n    const dataFormated = (_this$data3 = this.data) === null || _this$data3 === void 0 ? void 0 : _this$data3.data.map(item => {\n      var _this$data4;\n      return {\n        subject: (_this$data4 = this.data) === null || _this$data4 === void 0 ? void 0 : _this$data4.kind[item.kind],\n        A: item.value\n      };\n    });\n    return dataFormated;\n  }\n\n  /**\r\n   * @description composant Diagramme Score\r\n     * @return { object } Returns dataFormated after modelisation\r\n   */\n  formatDataScore() {\n    const dataFormated = this.data.todayScore * 100 || this.data.score * 100;\n    return dataFormated;\n  }\n}","map":{"version":3,"names":["Modelisation","constructor","data","formatUserName","dataFormated","userInfos","firstName","formatDataEnergy","keyData","formatDataActivity","sessions","map","item","index","name","uv","kilogram","pv","calories","formatDataSessions","day","sessionLength","formatDataRadarChart","subject","kind","A","value","formatDataScore","todayScore","score"],"sources":["C:/Users/pierr/Documents/openclassroom/Projet13/SportSeeP13/front-end/src/data/Modelisation.js"],"sourcesContent":["export class Modelisation {\r\n  constructor(data) {\r\n    this.data = data\r\n  }\r\n\r\n  /**\r\n   * @description composant Bonjour\r\n\r\n   * @return { object } Returns dataFormated after modelisation\r\n   */\r\n\r\n  formatUserName() {\r\n    const dataFormated = this.data.userInfos.firstName\r\n\r\n    return dataFormated\r\n  }\r\n\r\n  /**\r\n   * @description composant Energie\r\n\r\n   * @return { object } Returns dataFormated after modelisation\r\n   */\r\n\r\n  formatDataEnergy() {\r\n    const dataFormated = this.data.keyData\r\n\r\n    return dataFormated\r\n  }\r\n\r\n  /**\r\n   * @description composant graphique\r\n\r\n   * @return { object } Returns dataFormated after modelisation\r\n   */\r\n  formatDataActivity() {\r\n    const dataFormated = this.data?.sessions.map((item, index) => {\r\n      return {\r\n        name: index + 1,\r\n        uv: item.kilogram,\r\n        pv: item.calories,\r\n      }\r\n    })\r\n\r\n    return dataFormated\r\n  }\r\n\r\n  /**\r\n   * @description composant Diagramme courbe\r\n\r\n   * @return { object } Returns dataFormated after modelisation\r\n   */\r\n  formatDataSessions() {\r\n    const dataFormated = this.data?.sessions.map((item) => {\r\n      // convertit les nombres en jours\r\n      switch (item.day) {\r\n        case 1:\r\n          item.day = 'L'\r\n          break\r\n\r\n        case 2:\r\n          item.day = 'M'\r\n          break\r\n        case 3:\r\n          item.day = 'M'\r\n          break\r\n        case 4:\r\n          item.day = 'J'\r\n          break\r\n        case 5:\r\n          item.day = 'V'\r\n          break\r\n        case 6:\r\n          item.day = 'S'\r\n          break\r\n        case 7:\r\n          item.day = 'D'\r\n          break\r\n        default:\r\n      }\r\n      return {\r\n        name: item.day,\r\n        pv: item.sessionLength,\r\n      }\r\n    })\r\n\r\n    return dataFormated\r\n  }\r\n\r\n  /**\r\n   * @description composant Diagramme Toile\r\n\r\n   * @return { object } Returns dataFormated after modelisation\r\n   */\r\n  formatDataRadarChart() {\r\n    const dataFormated = this.data?.data.map((item) => {\r\n      return {\r\n        subject: this.data?.kind[item.kind],\r\n        A: item.value,\r\n      }\r\n    })\r\n    return dataFormated\r\n  }\r\n\r\n  /**\r\n   * @description composant Diagramme Score\r\n\r\n   * @return { object } Returns dataFormated after modelisation\r\n   */\r\n  formatDataScore() {\r\n    const dataFormated = this.data.todayScore * 100 || this.data.score * 100\r\n    return dataFormated\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,CAAC;EACxBC,WAAW,CAACC,IAAI,EAAE;IAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;;EAEA;AACF;AACA;AACA;;EAGEC,cAAc,GAAG;IACf,MAAMC,YAAY,GAAG,IAAI,CAACF,IAAI,CAACG,SAAS,CAACC,SAAS;IAElD,OAAOF,YAAY;EACrB;;EAEA;AACF;AACA;AACA;;EAGEG,gBAAgB,GAAG;IACjB,MAAMH,YAAY,GAAG,IAAI,CAACF,IAAI,CAACM,OAAO;IAEtC,OAAOJ,YAAY;EACrB;;EAEA;AACF;AACA;AACA;EAEEK,kBAAkB,GAAG;IAAA;IACnB,MAAML,YAAY,iBAAG,IAAI,CAACF,IAAI,+CAAT,WAAWQ,QAAQ,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC5D,OAAO;QACLC,IAAI,EAAED,KAAK,GAAG,CAAC;QACfE,EAAE,EAAEH,IAAI,CAACI,QAAQ;QACjBC,EAAE,EAAEL,IAAI,CAACM;MACX,CAAC;IACH,CAAC,CAAC;IAEF,OAAOd,YAAY;EACrB;;EAEA;AACF;AACA;AACA;EAEEe,kBAAkB,GAAG;IAAA;IACnB,MAAMf,YAAY,kBAAG,IAAI,CAACF,IAAI,gDAAT,YAAWQ,QAAQ,CAACC,GAAG,CAAEC,IAAI,IAAK;MACrD;MACA,QAAQA,IAAI,CAACQ,GAAG;QACd,KAAK,CAAC;UACJR,IAAI,CAACQ,GAAG,GAAG,GAAG;UACd;QAEF,KAAK,CAAC;UACJR,IAAI,CAACQ,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJR,IAAI,CAACQ,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJR,IAAI,CAACQ,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJR,IAAI,CAACQ,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJR,IAAI,CAACQ,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJR,IAAI,CAACQ,GAAG,GAAG,GAAG;UACd;QACF;MAAQ;MAEV,OAAO;QACLN,IAAI,EAAEF,IAAI,CAACQ,GAAG;QACdH,EAAE,EAAEL,IAAI,CAACS;MACX,CAAC;IACH,CAAC,CAAC;IAEF,OAAOjB,YAAY;EACrB;;EAEA;AACF;AACA;AACA;EAEEkB,oBAAoB,GAAG;IAAA;IACrB,MAAMlB,YAAY,kBAAG,IAAI,CAACF,IAAI,gDAAT,YAAWA,IAAI,CAACS,GAAG,CAAEC,IAAI,IAAK;MAAA;MACjD,OAAO;QACLW,OAAO,iBAAE,IAAI,CAACrB,IAAI,gDAAT,YAAWsB,IAAI,CAACZ,IAAI,CAACY,IAAI,CAAC;QACnCC,CAAC,EAAEb,IAAI,CAACc;MACV,CAAC;IACH,CAAC,CAAC;IACF,OAAOtB,YAAY;EACrB;;EAEA;AACF;AACA;AACA;EAEEuB,eAAe,GAAG;IAChB,MAAMvB,YAAY,GAAG,IAAI,CAACF,IAAI,CAAC0B,UAAU,GAAG,GAAG,IAAI,IAAI,CAAC1B,IAAI,CAAC2B,KAAK,GAAG,GAAG;IACxE,OAAOzB,YAAY;EACrB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}