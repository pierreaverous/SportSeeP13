{"ast":null,"code":"// import { USER_MAIN_DATA } from '../data/mocked-data'\n// import { USER_ACTIVITY } from '../data/mocked-data'\n// import { USER_AVERAGE_SESSIONS } from '../data/mocked-data'\n// import { USER_PERFORMANCE } from '../data/mocked-data'\n\nexport class Modelisation {\n  constructor(data) {\n    this.data = data;\n  }\n\n  //component Bonjour\n  formatUserName() {\n    const dataFormated = this.data.userInfos.firstName;\n    return dataFormated;\n  }\n\n  // composant Energie\n  formatDataEnergy(params) {\n    var _this$data;\n    const dataFormated = (_this$data = this.data) === null || _this$data === void 0 ? void 0 : _this$data.keyData.map((item, index) => {\n      return {\n        calorieCount: item.keyData.calorieCount,\n        proteinCount: item.keyData.proteinCount,\n        carbohydrateCount: item.keyData.carbohydrateCount,\n        lipidCount: item.keyData.lipidCount\n      };\n    });\n    return dataFormated;\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          calorieCount: element.keyData.calorieCount,\n          proteinCount: element.keyData.proteinCount,\n          carbohydrateCount: element.keyData.carbohydrateCount,\n          lipidCount: element.keyData.lipidCount\n        };\n      }\n    }\n  }\n\n  //graphique\n  formatDataActivity() {\n    var _this$data2;\n    const dataFormated = (_this$data2 = this.data) === null || _this$data2 === void 0 ? void 0 : _this$data2.sessions.map((item, index) => {\n      return {\n        name: index + 1,\n        uv: item.kilogram,\n        pv: item.calories\n      };\n    });\n    return dataFormated;\n  }\n  // composant Diagramme courbe\n  formatDataSessions() {\n    var _this$data3;\n    const dataFormated = (_this$data3 = this.data) === null || _this$data3 === void 0 ? void 0 : _this$data3.sessions.map(item => {\n      // convertit les nombres en jours\n      switch (item.day) {\n        case 1:\n          item.day = 'L';\n          break;\n        case 2:\n          item.day = 'M';\n          break;\n        case 3:\n          item.day = 'M';\n          break;\n        case 4:\n          item.day = 'J';\n          break;\n        case 5:\n          item.day = 'V';\n          break;\n        case 6:\n          item.day = 'S';\n          break;\n        case 7:\n          item.day = 'D';\n          break;\n        default:\n        // console.log(`erreur de jour ${el.day}.`)\n      }\n\n      return {\n        name: item.day,\n        // uv: 0,\n        pv: item.sessionLength\n        // amt: 0,\n      };\n    });\n\n    return dataFormated;\n  }\n\n  // composant diagramme toile\n  formatDataRadarChart() {\n    var _this$data4;\n    const dataFormated = (_this$data4 = this.data) === null || _this$data4 === void 0 ? void 0 : _this$data4.data.map(item => {\n      var _this$data5;\n      return {\n        subject: (_this$data5 = this.data) === null || _this$data5 === void 0 ? void 0 : _this$data5.kind[item.kind],\n        A: item.value\n      };\n    });\n    return dataFormated;\n  }\n\n  // composant Diagramme Score\n  formatDataScore() {\n    const dataFormated = this.data.todayScore * 100;\n    return dataFormated;\n  }\n}","map":{"version":3,"names":["Modelisation","constructor","data","formatUserName","dataFormated","userInfos","firstName","formatDataEnergy","params","keyData","map","item","index","calorieCount","proteinCount","carbohydrateCount","lipidCount","element","id","toString","formatDataActivity","sessions","name","uv","kilogram","pv","calories","formatDataSessions","day","sessionLength","formatDataRadarChart","subject","kind","A","value","formatDataScore","todayScore"],"sources":["/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/data/Modelisation.js"],"sourcesContent":["// import { USER_MAIN_DATA } from '../data/mocked-data'\n// import { USER_ACTIVITY } from '../data/mocked-data'\n// import { USER_AVERAGE_SESSIONS } from '../data/mocked-data'\n// import { USER_PERFORMANCE } from '../data/mocked-data'\n\nexport class Modelisation {\n  constructor(data) {\n    this.data = data\n  }\n\n  //component Bonjour\n  formatUserName() {\n    const dataFormated = this.data.userInfos.firstName\n\n    return dataFormated\n  }\n\n  // composant Energie\n  formatDataEnergy(params) {\n    const dataFormated = this.data?.keyData.map((item, index) => {\n      return {\n        calorieCount: item.keyData.calorieCount,\n        proteinCount: item.keyData.proteinCount,\n        carbohydrateCount: item.keyData.carbohydrateCount,\n        lipidCount: item.keyData.lipidCount,\n      }\n    })\n\n    return dataFormated\n\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          calorieCount: element.keyData.calorieCount,\n          proteinCount: element.keyData.proteinCount,\n          carbohydrateCount: element.keyData.carbohydrateCount,\n          lipidCount: element.keyData.lipidCount,\n        }\n      }\n    }\n  }\n\n  //graphique\n  formatDataActivity() {\n    const dataFormated = this.data?.sessions.map((item, index) => {\n      return {\n        name: index + 1,\n        uv: item.kilogram,\n        pv: item.calories,\n      }\n    })\n\n    return dataFormated\n  }\n  // composant Diagramme courbe\n  formatDataSessions() {\n    const dataFormated = this.data?.sessions.map((item) => {\n      // convertit les nombres en jours\n      switch (item.day) {\n        case 1:\n          item.day = 'L'\n          break\n\n        case 2:\n          item.day = 'M'\n          break\n        case 3:\n          item.day = 'M'\n          break\n        case 4:\n          item.day = 'J'\n          break\n        case 5:\n          item.day = 'V'\n          break\n        case 6:\n          item.day = 'S'\n          break\n        case 7:\n          item.day = 'D'\n          break\n        default:\n        // console.log(`erreur de jour ${el.day}.`)\n      }\n      return {\n        name: item.day,\n        // uv: 0,\n        pv: item.sessionLength,\n        // amt: 0,\n      }\n    })\n\n    return dataFormated\n  }\n\n  // composant diagramme toile\n  formatDataRadarChart() {\n    const dataFormated = this.data?.data.map((item) => {\n      return {\n        subject: this.data?.kind[item.kind],\n        A: item.value,\n      }\n    })\n    return dataFormated\n  }\n\n  // composant Diagramme Score\n  formatDataScore() {\n    const dataFormated = this.data.todayScore * 100\n    return dataFormated\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,YAAY,CAAC;EACxBC,WAAW,CAACC,IAAI,EAAE;IAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;;EAEA;EACAC,cAAc,GAAG;IACf,MAAMC,YAAY,GAAG,IAAI,CAACF,IAAI,CAACG,SAAS,CAACC,SAAS;IAElD,OAAOF,YAAY;EACrB;;EAEA;EACAG,gBAAgB,CAACC,MAAM,EAAE;IAAA;IACvB,MAAMJ,YAAY,iBAAG,IAAI,CAACF,IAAI,+CAAT,WAAWO,OAAO,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC3D,OAAO;QACLC,YAAY,EAAEF,IAAI,CAACF,OAAO,CAACI,YAAY;QACvCC,YAAY,EAAEH,IAAI,CAACF,OAAO,CAACK,YAAY;QACvCC,iBAAiB,EAAEJ,IAAI,CAACF,OAAO,CAACM,iBAAiB;QACjDC,UAAU,EAAEL,IAAI,CAACF,OAAO,CAACO;MAC3B,CAAC;IACH,CAAC,CAAC;IAEF,OAAOZ,YAAY;IAEnB,KAAK,IAAIa,OAAO,IAAI,IAAI,CAACf,IAAI,EAAE;MAC7B,IAAIe,OAAO,CAACC,EAAE,CAACC,QAAQ,EAAE,KAAKX,MAAM,CAACU,EAAE,EAAE;QACvC,OAAO;UACLL,YAAY,EAAEI,OAAO,CAACR,OAAO,CAACI,YAAY;UAC1CC,YAAY,EAAEG,OAAO,CAACR,OAAO,CAACK,YAAY;UAC1CC,iBAAiB,EAAEE,OAAO,CAACR,OAAO,CAACM,iBAAiB;UACpDC,UAAU,EAAEC,OAAO,CAACR,OAAO,CAACO;QAC9B,CAAC;MACH;IACF;EACF;;EAEA;EACAI,kBAAkB,GAAG;IAAA;IACnB,MAAMhB,YAAY,kBAAG,IAAI,CAACF,IAAI,gDAAT,YAAWmB,QAAQ,CAACX,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC5D,OAAO;QACLU,IAAI,EAAEV,KAAK,GAAG,CAAC;QACfW,EAAE,EAAEZ,IAAI,CAACa,QAAQ;QACjBC,EAAE,EAAEd,IAAI,CAACe;MACX,CAAC;IACH,CAAC,CAAC;IAEF,OAAOtB,YAAY;EACrB;EACA;EACAuB,kBAAkB,GAAG;IAAA;IACnB,MAAMvB,YAAY,kBAAG,IAAI,CAACF,IAAI,gDAAT,YAAWmB,QAAQ,CAACX,GAAG,CAAEC,IAAI,IAAK;MACrD;MACA,QAAQA,IAAI,CAACiB,GAAG;QACd,KAAK,CAAC;UACJjB,IAAI,CAACiB,GAAG,GAAG,GAAG;UACd;QAEF,KAAK,CAAC;UACJjB,IAAI,CAACiB,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJjB,IAAI,CAACiB,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJjB,IAAI,CAACiB,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJjB,IAAI,CAACiB,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJjB,IAAI,CAACiB,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJjB,IAAI,CAACiB,GAAG,GAAG,GAAG;UACd;QACF;QACA;MAAA;;MAEF,OAAO;QACLN,IAAI,EAAEX,IAAI,CAACiB,GAAG;QACd;QACAH,EAAE,EAAEd,IAAI,CAACkB;QACT;MACF,CAAC;IACH,CAAC,CAAC;;IAEF,OAAOzB,YAAY;EACrB;;EAEA;EACA0B,oBAAoB,GAAG;IAAA;IACrB,MAAM1B,YAAY,kBAAG,IAAI,CAACF,IAAI,gDAAT,YAAWA,IAAI,CAACQ,GAAG,CAAEC,IAAI,IAAK;MAAA;MACjD,OAAO;QACLoB,OAAO,iBAAE,IAAI,CAAC7B,IAAI,gDAAT,YAAW8B,IAAI,CAACrB,IAAI,CAACqB,IAAI,CAAC;QACnCC,CAAC,EAAEtB,IAAI,CAACuB;MACV,CAAC;IACH,CAAC,CAAC;IACF,OAAO9B,YAAY;EACrB;;EAEA;EACA+B,eAAe,GAAG;IAChB,MAAM/B,YAAY,GAAG,IAAI,CAACF,IAAI,CAACkC,UAAU,GAAG,GAAG;IAC/C,OAAOhC,YAAY;EACrB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}