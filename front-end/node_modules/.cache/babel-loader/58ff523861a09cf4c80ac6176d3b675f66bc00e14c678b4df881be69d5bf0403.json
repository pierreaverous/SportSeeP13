{"ast":null,"code":"var _jsxFileName = \"/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/components/Energie/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment } from 'react';\nimport { USER_MAIN_DATA } from '../../data/mocked-data';\nimport { Modelisation } from '../../data/Modelisation';\nimport './style.scss';\nimport useFetch from '../../hooks/useFetch';\n\n//IMPORT IMAGES\nimport caloriesImg from '../../assets/calories-icon.png';\nimport proteinesImg from '../../assets/protein-icon.png';\nimport glucidesImg from '../../assets/carbs-icon.png';\nimport lipidesImg from '../../assets/fat-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calories = 'Calories';\nconst proteines = 'Protéines';\nconst glucides = 'Glucides';\nconst lipides = 'Lipides';\nfunction Energie(_ref) {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const {\n    data,\n    error\n  } = useFetch(`http://localhost:3000/user/${userId}`, getUserDataMockWithId());\n  function getUserDataMockWithId() {\n    const userData = USER_MAIN_DATA.find(user => +user.userId === +userId);\n    return userData;\n  }\n\n  // function getData() {\n  //   const modelisation = new Modelisation(data)\n  //   return modelisation.formatDataEnergy()\n  // }\n\n  if (data !== null) {\n    console.log(data);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"energie-item energie_calories\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: caloriesImg,\n          alt: calories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: `${data.keyData.calorieCount.toLocaleString('en-IN')}kCal`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: calories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"energie-item energie_proteines\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: proteinesImg,\n          alt: proteines\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: `${data.keyData.proteinCount}g`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: proteines\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"energie-item energie_glucides\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: glucidesImg,\n          alt: glucides\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: `${data.keyData.carbohydrateCount}g`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: glucides\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"energie-item energie_lipides\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: lipidesImg,\n          alt: lipides\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: `${data.keyData.lipidCount}g`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: lipides\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Energie, \"nxGcM3ZnyDIOqE8/kWT+fd3s9HI=\", false, function () {\n  return [useFetch];\n});\n_c = Energie;\nexport default Energie;\nvar _c;\n$RefreshReg$(_c, \"Energie\");","map":{"version":3,"names":["React","Fragment","USER_MAIN_DATA","Modelisation","useFetch","caloriesImg","proteinesImg","glucidesImg","lipidesImg","calories","proteines","glucides","lipides","Energie","userId","data","error","getUserDataMockWithId","userData","find","user","console","log","keyData","calorieCount","toLocaleString","proteinCount","carbohydrateCount","lipidCount"],"sources":["/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/components/Energie/index.jsx"],"sourcesContent":["import React, { Fragment } from 'react'\nimport { USER_MAIN_DATA } from '../../data/mocked-data'\nimport { Modelisation } from '../../data/Modelisation'\nimport './style.scss'\nimport useFetch from '../../hooks/useFetch'\n\n//IMPORT IMAGES\nimport caloriesImg from '../../assets/calories-icon.png'\nimport proteinesImg from '../../assets/protein-icon.png'\nimport glucidesImg from '../../assets/carbs-icon.png'\nimport lipidesImg from '../../assets/fat-icon.png'\n\nconst calories = 'Calories'\nconst proteines = 'Protéines'\nconst glucides = 'Glucides'\nconst lipides = 'Lipides'\n\nfunction Energie({ userId }) {\n  const { data, error } = useFetch(\n    `http://localhost:3000/user/${userId}`,\n    getUserDataMockWithId()\n  )\n  function getUserDataMockWithId() {\n    const userData = USER_MAIN_DATA.find((user) => +user.userId === +userId)\n    return userData\n  }\n\n  // function getData() {\n  //   const modelisation = new Modelisation(data)\n  //   return modelisation.formatDataEnergy()\n  // }\n\n  if (data !== null) {\n    console.log(data)\n\n    return (\n      <Fragment>\n        <div className=\"energie-item energie_calories\">\n          <img src={caloriesImg} alt={calories} />\n          <div>\n            {/* toLocaleString pour séparation des milliers */}\n            <h3>{`${data.keyData.calorieCount.toLocaleString(\n              'en-IN'\n            )}kCal`}</h3>\n            <p>{calories}</p>\n          </div>\n        </div>\n        <div className=\"energie-item energie_proteines\">\n          <img src={proteinesImg} alt={proteines} />\n          <div>\n            <h3>{`${data.keyData.proteinCount}g`}</h3>\n            <p>{proteines}</p>\n          </div>\n        </div>\n        <div className=\"energie-item energie_glucides\">\n          <img src={glucidesImg} alt={glucides} />\n          <div>\n            <h3>{`${data.keyData.carbohydrateCount}g`}</h3>\n            <p>{glucides}</p>\n          </div>\n        </div>\n        <div className=\"energie-item energie_lipides\">\n          <img src={lipidesImg} alt={lipides} />\n          <div>\n            <h3>{`${data.keyData.lipidCount}g`}</h3>\n            <p>{lipides}</p>\n          </div>\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default Energie\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}