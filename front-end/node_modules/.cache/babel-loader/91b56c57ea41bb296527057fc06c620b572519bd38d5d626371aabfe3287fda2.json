{"ast":null,"code":"// import { USER_MAIN_DATA } from '../data/mocked-data'\n// import { USER_ACTIVITY } from '../data/mocked-data'\n// import { USER_AVERAGE_SESSIONS } from '../data/mocked-data'\n// import { USER_PERFORMANCE } from '../data/mocked-data'\n\nexport class Modelisation {\n  constructor(data) {\n    this.data = data;\n  }\n\n  //component Bonjour\n  formatUserName() {\n    const dataFormated = this.data.userInfos.firstName;\n    return dataFormated;\n  }\n\n  // composant Energie\n  formatDataEnergy() {\n    var _this$data;\n    const dataFormated = (_this$data = this.data) === null || _this$data === void 0 ? void 0 : _this$data.map(item => {\n      return {\n        calorie: item.kind.calorieCount,\n        proteinCount: item.kind.proteinCount,\n        carbohydrateCount: item.kind.carbohydrateCount,\n        lipidCount: item.kind.lipidCount\n      };\n    });\n    return dataFormated;\n  }\n\n  //graphique\n  formatDataActivity() {\n    var _this$data2;\n    const dataFormated = (_this$data2 = this.data) === null || _this$data2 === void 0 ? void 0 : _this$data2.sessions.map((item, index) => {\n      return {\n        name: index + 1,\n        uv: item.kilogram,\n        pv: item.calories\n      };\n    });\n    return dataFormated;\n  }\n  // composant Diagramme courbe\n  formatDataSessions() {\n    var _this$data3;\n    const dataFormated = (_this$data3 = this.data) === null || _this$data3 === void 0 ? void 0 : _this$data3.sessions.map(item => {\n      // convertit les nombres en jours\n      switch (item.day) {\n        case 1:\n          item.day = 'L';\n          break;\n        case 2:\n          item.day = 'M';\n          break;\n        case 3:\n          item.day = 'M';\n          break;\n        case 4:\n          item.day = 'J';\n          break;\n        case 5:\n          item.day = 'V';\n          break;\n        case 6:\n          item.day = 'S';\n          break;\n        case 7:\n          item.day = 'D';\n          break;\n        default:\n        // console.log(`erreur de jour ${el.day}.`)\n      }\n\n      return {\n        name: item.day,\n        // uv: 0,\n        pv: item.sessionLength\n        // amt: 0,\n      };\n    });\n\n    return dataFormated;\n  }\n\n  // composant diagramme toile\n  formatDataRadarChart() {\n    var _this$data4;\n    const dataFormated = (_this$data4 = this.data) === null || _this$data4 === void 0 ? void 0 : _this$data4.data.map(item => {\n      var _this$data5;\n      return {\n        subject: (_this$data5 = this.data) === null || _this$data5 === void 0 ? void 0 : _this$data5.kind[item.kind],\n        A: item.value\n      };\n    });\n    return dataFormated;\n  }\n\n  // composant Diagramme Score\n  formatDataScore() {\n    const dataFormated = this.data.todayScore * 100;\n    return dataFormated;\n  }\n}","map":{"version":3,"names":["Modelisation","constructor","data","formatUserName","dataFormated","userInfos","firstName","formatDataEnergy","map","item","calorie","kind","calorieCount","proteinCount","carbohydrateCount","lipidCount","formatDataActivity","sessions","index","name","uv","kilogram","pv","calories","formatDataSessions","day","sessionLength","formatDataRadarChart","subject","A","value","formatDataScore","todayScore"],"sources":["/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/data/Modelisation.js"],"sourcesContent":["// import { USER_MAIN_DATA } from '../data/mocked-data'\n// import { USER_ACTIVITY } from '../data/mocked-data'\n// import { USER_AVERAGE_SESSIONS } from '../data/mocked-data'\n// import { USER_PERFORMANCE } from '../data/mocked-data'\n\nexport class Modelisation {\n  constructor(data) {\n    this.data = data\n  }\n\n  //component Bonjour\n  formatUserName() {\n    const dataFormated = this.data.userInfos.firstName\n\n    return dataFormated\n  }\n\n  // composant Energie\n  formatDataEnergy() {\n    const dataFormated = this.data?.map((item) => {\n      return {\n        calorie: item.kind.calorieCount,\n        proteinCount: item.kind.proteinCount,\n        carbohydrateCount: item.kind.carbohydrateCount,\n        lipidCount: item.kind.lipidCount,\n      }\n    })\n    return dataFormated\n  }\n\n  //graphique\n  formatDataActivity() {\n    const dataFormated = this.data?.sessions.map((item, index) => {\n      return {\n        name: index + 1,\n        uv: item.kilogram,\n        pv: item.calories,\n      }\n    })\n\n    return dataFormated\n  }\n  // composant Diagramme courbe\n  formatDataSessions() {\n    const dataFormated = this.data?.sessions.map((item) => {\n      // convertit les nombres en jours\n      switch (item.day) {\n        case 1:\n          item.day = 'L'\n          break\n\n        case 2:\n          item.day = 'M'\n          break\n        case 3:\n          item.day = 'M'\n          break\n        case 4:\n          item.day = 'J'\n          break\n        case 5:\n          item.day = 'V'\n          break\n        case 6:\n          item.day = 'S'\n          break\n        case 7:\n          item.day = 'D'\n          break\n        default:\n        // console.log(`erreur de jour ${el.day}.`)\n      }\n      return {\n        name: item.day,\n        // uv: 0,\n        pv: item.sessionLength,\n        // amt: 0,\n      }\n    })\n\n    return dataFormated\n  }\n\n  // composant diagramme toile\n  formatDataRadarChart() {\n    const dataFormated = this.data?.data.map((item) => {\n      return {\n        subject: this.data?.kind[item.kind],\n        A: item.value,\n      }\n    })\n    return dataFormated\n  }\n\n  // composant Diagramme Score\n  formatDataScore() {\n    const dataFormated = this.data.todayScore * 100\n    return dataFormated\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,YAAY,CAAC;EACxBC,WAAW,CAACC,IAAI,EAAE;IAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;;EAEA;EACAC,cAAc,GAAG;IACf,MAAMC,YAAY,GAAG,IAAI,CAACF,IAAI,CAACG,SAAS,CAACC,SAAS;IAElD,OAAOF,YAAY;EACrB;;EAEA;EACAG,gBAAgB,GAAG;IAAA;IACjB,MAAMH,YAAY,iBAAG,IAAI,CAACF,IAAI,+CAAT,WAAWM,GAAG,CAAEC,IAAI,IAAK;MAC5C,OAAO;QACLC,OAAO,EAAED,IAAI,CAACE,IAAI,CAACC,YAAY;QAC/BC,YAAY,EAAEJ,IAAI,CAACE,IAAI,CAACE,YAAY;QACpCC,iBAAiB,EAAEL,IAAI,CAACE,IAAI,CAACG,iBAAiB;QAC9CC,UAAU,EAAEN,IAAI,CAACE,IAAI,CAACI;MACxB,CAAC;IACH,CAAC,CAAC;IACF,OAAOX,YAAY;EACrB;;EAEA;EACAY,kBAAkB,GAAG;IAAA;IACnB,MAAMZ,YAAY,kBAAG,IAAI,CAACF,IAAI,gDAAT,YAAWe,QAAQ,CAACT,GAAG,CAAC,CAACC,IAAI,EAAES,KAAK,KAAK;MAC5D,OAAO;QACLC,IAAI,EAAED,KAAK,GAAG,CAAC;QACfE,EAAE,EAAEX,IAAI,CAACY,QAAQ;QACjBC,EAAE,EAAEb,IAAI,CAACc;MACX,CAAC;IACH,CAAC,CAAC;IAEF,OAAOnB,YAAY;EACrB;EACA;EACAoB,kBAAkB,GAAG;IAAA;IACnB,MAAMpB,YAAY,kBAAG,IAAI,CAACF,IAAI,gDAAT,YAAWe,QAAQ,CAACT,GAAG,CAAEC,IAAI,IAAK;MACrD;MACA,QAAQA,IAAI,CAACgB,GAAG;QACd,KAAK,CAAC;UACJhB,IAAI,CAACgB,GAAG,GAAG,GAAG;UACd;QAEF,KAAK,CAAC;UACJhB,IAAI,CAACgB,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJhB,IAAI,CAACgB,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJhB,IAAI,CAACgB,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJhB,IAAI,CAACgB,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJhB,IAAI,CAACgB,GAAG,GAAG,GAAG;UACd;QACF,KAAK,CAAC;UACJhB,IAAI,CAACgB,GAAG,GAAG,GAAG;UACd;QACF;QACA;MAAA;;MAEF,OAAO;QACLN,IAAI,EAAEV,IAAI,CAACgB,GAAG;QACd;QACAH,EAAE,EAAEb,IAAI,CAACiB;QACT;MACF,CAAC;IACH,CAAC,CAAC;;IAEF,OAAOtB,YAAY;EACrB;;EAEA;EACAuB,oBAAoB,GAAG;IAAA;IACrB,MAAMvB,YAAY,kBAAG,IAAI,CAACF,IAAI,gDAAT,YAAWA,IAAI,CAACM,GAAG,CAAEC,IAAI,IAAK;MAAA;MACjD,OAAO;QACLmB,OAAO,iBAAE,IAAI,CAAC1B,IAAI,gDAAT,YAAWS,IAAI,CAACF,IAAI,CAACE,IAAI,CAAC;QACnCkB,CAAC,EAAEpB,IAAI,CAACqB;MACV,CAAC;IACH,CAAC,CAAC;IACF,OAAO1B,YAAY;EACrB;;EAEA;EACA2B,eAAe,GAAG;IAChB,MAAM3B,YAAY,GAAG,IAAI,CAACF,IAAI,CAAC8B,UAAU,GAAG,GAAG;IAC/C,OAAO5B,YAAY;EACrB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}