{"ast":null,"code":"// import { USER_MAIN_DATA } from '../data/mocked-data'\n// import { USER_ACTIVITY } from '../data/mocked-data'\n// import { USER_AVERAGE_SESSIONS } from '../data/mocked-data'\n// import { USER_PERFORMANCE } from '../data/mocked-data'\n\nexport class Modelisation {\n  constructor(data) {\n    this.data = data;\n  }\n\n  //component Bonjour\n  formatUserName(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          name: element.userInfos.firstName\n        };\n      }\n    }\n  }\n\n  // composant DiagrammeScore\n  formatDataScore(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          name: 'score',\n          value: element.todayScore * 100\n        };\n      }\n    }\n  }\n\n  // composant Energie\n  formatDataEnergy(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          calorieCount: element.keyData.calorieCount,\n          proteinCount: element.keyData.proteinCount,\n          carbohydrateCount: element.keyData.carbohydrateCount,\n          lipidCount: element.keyData.lipidCount\n        };\n      }\n    }\n  }\n\n  // composant Diagramme Courbe sessions\n  //    name: 'Page A',\n  // uv: 4000,\n  // pv: 2400,\n  // amt: 2400,\n\n  formatDataSessions(params) {\n    console.log(this.data);\n    for (let element of this.data) {\n      if (element.userId.toString() === params.id) {\n        // console.log(element)\n        // console.log(element.userId)\n        const uv = element.sessions.forEach(el => {\n          return el.sessionLength;\n        });\n        return {\n          name: element.userId,\n          uv: uv,\n          pv: 4300,\n          amt: 2100\n        };\n        // console.log(el)\n      }\n    }\n  }\n\n  formatDataActivity() {\n    return {\n      //filter ?\n      name: 'Page A',\n      uv: 4000,\n      pv: 2400,\n      // amt: 2400,\n\n      day: this.data.map(el => el.sessions.day),\n      kilograms: this.data.map(el => el.sessions.kilogram),\n      calories: this.data.map(el => el.sessions.calories)\n    };\n  }\n  formatDataRadarChart() {\n    return {\n      subject: 'Math',\n      A: 120,\n      B: 110,\n      fullMark: 150\n    };\n  }\n  formatDataPerformances() {\n    return {\n      kind: this.data.map(el => el.kind),\n      data: this.data.map(el => el.data)\n    };\n  }\n}\n\n// //formatDataScore()\n// // console.log(USER_MAIN_DATA)\n// const dataApiScore = USER_MAIN_DATA\n// // console.log(dataApiScore)\n// const maClasseScore = new Modelisation(dataApiScore)\n// // console.log(maClasseScore)\n// const maClasseformatDataScore = maClasseScore.formatDataScore()\n// console.log(maClasseformatDataScore)\n\n// //formatDataSessions()\n// // console.log(USER_AVERAGE_SESSIONS)\n// const dataApiSessions = USER_AVERAGE_SESSIONS\n// // console.log(dataApiSessions)\n// const maClasseSessions = new Modelisation(dataApiSessions)\n// // console.log(maClasseSessions)\n// const maClasseformatDataSessions = maClasseSessions.formatDataSessions()\n// console.log(maClasseformatDataSessions)\n\n// //formatDataActivity()\n// // console.log(USER_ACTIVITY)\n// const dataApiActivity = USER_ACTIVITY\n// // console.log(dataApiActivity)\n// const maClasseActivity = new Modelisation(dataApiActivity)\n// // console.log(maClasseActivity)\n// const maClasseformatDataActivity = maClasseActivity.formatDataActivity()\n// console.log(maClasseformatDataActivity)\n\n// //formatDataperformances()\n// // console.log(USER_PERFORMANCE)\n// const dataApiPerformances = USER_PERFORMANCE\n// // console.log(dataApiPerformances)\n// const maClassePerformances = new Modelisation(dataApiPerformances)\n// // console.log(maClassePerformances)\n// const maClasseformatDataPerformances =\n//   maClassePerformances.formatDataPerformances()\n// console.log(maClasseformatDataPerformances)","map":{"version":3,"names":["Modelisation","constructor","data","formatUserName","params","element","id","toString","name","userInfos","firstName","formatDataScore","value","todayScore","formatDataEnergy","calorieCount","keyData","proteinCount","carbohydrateCount","lipidCount","formatDataSessions","console","log","userId","uv","sessions","forEach","el","sessionLength","pv","amt","formatDataActivity","day","map","kilograms","kilogram","calories","formatDataRadarChart","subject","A","B","fullMark","formatDataPerformances","kind"],"sources":["/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/data/Modelisation.js"],"sourcesContent":["// import { USER_MAIN_DATA } from '../data/mocked-data'\n// import { USER_ACTIVITY } from '../data/mocked-data'\n// import { USER_AVERAGE_SESSIONS } from '../data/mocked-data'\n// import { USER_PERFORMANCE } from '../data/mocked-data'\n\nexport class Modelisation {\n  constructor(data) {\n    this.data = data\n  }\n\n  //component Bonjour\n  formatUserName(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          name: element.userInfos.firstName,\n        }\n      }\n    }\n  }\n\n  // composant DiagrammeScore\n  formatDataScore(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          name: 'score',\n          value: element.todayScore * 100,\n        }\n      }\n    }\n  }\n\n  // composant Energie\n  formatDataEnergy(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          calorieCount: element.keyData.calorieCount,\n          proteinCount: element.keyData.proteinCount,\n          carbohydrateCount: element.keyData.carbohydrateCount,\n          lipidCount: element.keyData.lipidCount,\n        }\n      }\n    }\n  }\n\n  // composant Diagramme Courbe sessions\n  //    name: 'Page A',\n  // uv: 4000,\n  // pv: 2400,\n  // amt: 2400,\n\n  formatDataSessions(params) {\n    console.log(this.data)\n    for (let element of this.data) {\n      if (element.userId.toString() === params.id) {\n        // console.log(element)\n        // console.log(element.userId)\n        const uv = element.sessions.forEach((el) => {\n          return el.sessionLength\n        })\n        return {\n          name: element.userId,\n          uv: uv,\n          pv: 4300,\n          amt: 2100,\n        }\n        // console.log(el)\n      }\n    }\n  }\n\n  formatDataActivity() {\n    return {\n      //filter ?\n      name: 'Page A',\n      uv: 4000,\n      pv: 2400,\n      // amt: 2400,\n\n      day: this.data.map((el) => el.sessions.day),\n      kilograms: this.data.map((el) => el.sessions.kilogram),\n      calories: this.data.map((el) => el.sessions.calories),\n    }\n  }\n\n  formatDataRadarChart() {\n    return {\n      subject: 'Math',\n      A: 120,\n      B: 110,\n      fullMark: 150,\n    }\n  }\n\n  formatDataPerformances() {\n    return {\n      kind: this.data.map((el) => el.kind),\n      data: this.data.map((el) => el.data),\n    }\n  }\n}\n\n// //formatDataScore()\n// // console.log(USER_MAIN_DATA)\n// const dataApiScore = USER_MAIN_DATA\n// // console.log(dataApiScore)\n// const maClasseScore = new Modelisation(dataApiScore)\n// // console.log(maClasseScore)\n// const maClasseformatDataScore = maClasseScore.formatDataScore()\n// console.log(maClasseformatDataScore)\n\n// //formatDataSessions()\n// // console.log(USER_AVERAGE_SESSIONS)\n// const dataApiSessions = USER_AVERAGE_SESSIONS\n// // console.log(dataApiSessions)\n// const maClasseSessions = new Modelisation(dataApiSessions)\n// // console.log(maClasseSessions)\n// const maClasseformatDataSessions = maClasseSessions.formatDataSessions()\n// console.log(maClasseformatDataSessions)\n\n// //formatDataActivity()\n// // console.log(USER_ACTIVITY)\n// const dataApiActivity = USER_ACTIVITY\n// // console.log(dataApiActivity)\n// const maClasseActivity = new Modelisation(dataApiActivity)\n// // console.log(maClasseActivity)\n// const maClasseformatDataActivity = maClasseActivity.formatDataActivity()\n// console.log(maClasseformatDataActivity)\n\n// //formatDataperformances()\n// // console.log(USER_PERFORMANCE)\n// const dataApiPerformances = USER_PERFORMANCE\n// // console.log(dataApiPerformances)\n// const maClassePerformances = new Modelisation(dataApiPerformances)\n// // console.log(maClassePerformances)\n// const maClasseformatDataPerformances =\n//   maClassePerformances.formatDataPerformances()\n// console.log(maClasseformatDataPerformances)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}