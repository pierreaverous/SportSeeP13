{"ast":null,"code":"// import { USER_MAIN_DATA } from '../data/mocked-data'\n// import { USER_ACTIVITY } from '../data/mocked-data'\n// import { USER_AVERAGE_SESSIONS } from '../data/mocked-data'\n// import { USER_PERFORMANCE } from '../data/mocked-data'\n\nexport class Modelisation {\n  constructor(data) {\n    this.data = data;\n  }\n\n  //component Bonjour\n  formatUserName(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          name: element.userInfos.firstName\n        };\n      }\n    }\n  }\n\n  // composant DiagrammeScore\n  formatDataScore(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          name: 'score',\n          value: element.todayScore * 100\n        };\n      }\n    }\n  }\n\n  // composant Energie\n  formatDataEnergy(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          calorieCount: element.keyData.calorieCount,\n          proteinCount: element.keyData.proteinCount,\n          carbohydrateCount: element.keyData.carbohydrateCount,\n          lipidCount: element.keyData.lipidCount\n        };\n      }\n    }\n  }\n  formatDataSessions(params) {\n    const data = [];\n    for (let element of this.data) {\n      if (element.userId.toString() === params.id) {\n        element.sessions.map(el => {\n          // convertit les nombres en jours\n          switch (el.day) {\n            case 1:\n              el.day = 'L';\n              break;\n            case 2:\n              el.day = 'M';\n              break;\n            case 3:\n              el.day = 'M';\n              break;\n            case 4:\n              el.day = 'J';\n              break;\n            case 5:\n              el.day = 'V';\n              break;\n            case 6:\n              el.day = 'S';\n              break;\n            case 7:\n              el.day = 'D';\n              break;\n            default:\n            // console.log(`erreur de jour ${el.day}.`)\n          }\n\n          data.push({\n            name: el.day,\n            // uv: 0,\n            pv: el.sessionLength\n            // amt: 0,\n          });\n        });\n\n        return data;\n      }\n    }\n  }\n  formatDataActivity() {\n    return {\n      //filter ?\n      name: 'Page A',\n      uv: 4000,\n      pv: 2400,\n      // amt: 2400,\n\n      day: this.data.map(el => el.sessions.day),\n      kilograms: this.data.map(el => el.sessions.kilogram),\n      calories: this.data.map(el => el.sessions.calories)\n    };\n  }\n\n  // composant diagramme toile\n  formatDataRadarChart(params) {\n    const data = [];\n    for (let element of this.data) {\n      // console.log(element)\n      if (element.userId.toString() === params.id) {\n        element.data.map(el => {\n          return el.kind = element.kind[el.kind];\n        });\n        data.push({\n          subject: el.kind,\n          A: el.value\n          // B: el.value,\n          // fullMark: el.value,\n        });\n\n        // console.log(data)\n        return data;\n      }\n    }\n  }\n  formatDataPerformances() {\n    return {\n      kind: this.data.map(el => el.kind),\n      data: this.data.map(el => el.data)\n    };\n  }\n}\n\n// //formatDataScore()\n// // console.log(USER_MAIN_DATA)\n// const dataApiScore = USER_MAIN_DATA\n// // console.log(dataApiScore)\n// const maClasseScore = new Modelisation(dataApiScore)\n// // console.log(maClasseScore)\n// const maClasseformatDataScore = maClasseScore.formatDataScore()\n// console.log(maClasseformatDataScore)\n\n// //formatDataSessions()\n// // console.log(USER_AVERAGE_SESSIONS)\n// const dataApiSessions = USER_AVERAGE_SESSIONS\n// // console.log(dataApiSessions)\n// const maClasseSessions = new Modelisation(dataApiSessions)\n// // console.log(maClasseSessions)\n// const maClasseformatDataSessions = maClasseSessions.formatDataSessions()\n// console.log(maClasseformatDataSessions)\n\n// //formatDataActivity()\n// // console.log(USER_ACTIVITY)\n// const dataApiActivity = USER_ACTIVITY\n// // console.log(dataApiActivity)\n// const maClasseActivity = new Modelisation(dataApiActivity)\n// // console.log(maClasseActivity)\n// const maClasseformatDataActivity = maClasseActivity.formatDataActivity()\n// console.log(maClasseformatDataActivity)\n\n// //formatDataperformances()\n// // console.log(USER_PERFORMANCE)\n// const dataApiPerformances = USER_PERFORMANCE\n// // console.log(dataApiPerformances)\n// const maClassePerformances = new Modelisation(dataApiPerformances)\n// // console.log(maClassePerformances)\n// const maClasseformatDataPerformances =\n//   maClassePerformances.formatDataPerformances()\n// console.log(maClasseformatDataPerformances)","map":{"version":3,"names":["Modelisation","constructor","data","formatUserName","params","element","id","toString","name","userInfos","firstName","formatDataScore","value","todayScore","formatDataEnergy","calorieCount","keyData","proteinCount","carbohydrateCount","lipidCount","formatDataSessions","userId","sessions","map","el","day","push","pv","sessionLength","formatDataActivity","uv","kilograms","kilogram","calories","formatDataRadarChart","kind","subject","A","formatDataPerformances"],"sources":["/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/data/Modelisation.js"],"sourcesContent":["// import { USER_MAIN_DATA } from '../data/mocked-data'\n// import { USER_ACTIVITY } from '../data/mocked-data'\n// import { USER_AVERAGE_SESSIONS } from '../data/mocked-data'\n// import { USER_PERFORMANCE } from '../data/mocked-data'\n\nexport class Modelisation {\n  constructor(data) {\n    this.data = data\n  }\n\n  //component Bonjour\n  formatUserName(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          name: element.userInfos.firstName,\n        }\n      }\n    }\n  }\n\n  // composant DiagrammeScore\n  formatDataScore(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          name: 'score',\n          value: element.todayScore * 100,\n        }\n      }\n    }\n  }\n\n  // composant Energie\n  formatDataEnergy(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          calorieCount: element.keyData.calorieCount,\n          proteinCount: element.keyData.proteinCount,\n          carbohydrateCount: element.keyData.carbohydrateCount,\n          lipidCount: element.keyData.lipidCount,\n        }\n      }\n    }\n  }\n\n  formatDataSessions(params) {\n    const data = []\n    for (let element of this.data) {\n      if (element.userId.toString() === params.id) {\n        element.sessions.map((el) => {\n          // convertit les nombres en jours\n          switch (el.day) {\n            case 1:\n              el.day = 'L'\n              break\n\n            case 2:\n              el.day = 'M'\n              break\n            case 3:\n              el.day = 'M'\n              break\n            case 4:\n              el.day = 'J'\n              break\n            case 5:\n              el.day = 'V'\n              break\n            case 6:\n              el.day = 'S'\n              break\n            case 7:\n              el.day = 'D'\n              break\n            default:\n            // console.log(`erreur de jour ${el.day}.`)\n          }\n\n          data.push({\n            name: el.day,\n            // uv: 0,\n            pv: el.sessionLength,\n            // amt: 0,\n          })\n        })\n        return data\n      }\n    }\n  }\n\n  formatDataActivity() {\n    return {\n      //filter ?\n      name: 'Page A',\n      uv: 4000,\n      pv: 2400,\n      // amt: 2400,\n\n      day: this.data.map((el) => el.sessions.day),\n      kilograms: this.data.map((el) => el.sessions.kilogram),\n      calories: this.data.map((el) => el.sessions.calories),\n    }\n  }\n\n  // composant diagramme toile\n  formatDataRadarChart(params) {\n    const data = []\n\n    for (let element of this.data) {\n      // console.log(element)\n      if (element.userId.toString() === params.id) {\n        element.data.map((el) => {\n          return (el.kind = element.kind[el.kind])\n        })\n\n        data.push({\n          subject: el.kind,\n          A: el.value,\n          // B: el.value,\n          // fullMark: el.value,\n        })\n\n        // console.log(data)\n        return data\n      }\n    }\n  }\n\n  formatDataPerformances() {\n    return {\n      kind: this.data.map((el) => el.kind),\n      data: this.data.map((el) => el.data),\n    }\n  }\n}\n\n// //formatDataScore()\n// // console.log(USER_MAIN_DATA)\n// const dataApiScore = USER_MAIN_DATA\n// // console.log(dataApiScore)\n// const maClasseScore = new Modelisation(dataApiScore)\n// // console.log(maClasseScore)\n// const maClasseformatDataScore = maClasseScore.formatDataScore()\n// console.log(maClasseformatDataScore)\n\n// //formatDataSessions()\n// // console.log(USER_AVERAGE_SESSIONS)\n// const dataApiSessions = USER_AVERAGE_SESSIONS\n// // console.log(dataApiSessions)\n// const maClasseSessions = new Modelisation(dataApiSessions)\n// // console.log(maClasseSessions)\n// const maClasseformatDataSessions = maClasseSessions.formatDataSessions()\n// console.log(maClasseformatDataSessions)\n\n// //formatDataActivity()\n// // console.log(USER_ACTIVITY)\n// const dataApiActivity = USER_ACTIVITY\n// // console.log(dataApiActivity)\n// const maClasseActivity = new Modelisation(dataApiActivity)\n// // console.log(maClasseActivity)\n// const maClasseformatDataActivity = maClasseActivity.formatDataActivity()\n// console.log(maClasseformatDataActivity)\n\n// //formatDataperformances()\n// // console.log(USER_PERFORMANCE)\n// const dataApiPerformances = USER_PERFORMANCE\n// // console.log(dataApiPerformances)\n// const maClassePerformances = new Modelisation(dataApiPerformances)\n// // console.log(maClassePerformances)\n// const maClasseformatDataPerformances =\n//   maClassePerformances.formatDataPerformances()\n// console.log(maClasseformatDataPerformances)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}