{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pierr\\\\Documents\\\\openclassroom\\\\Projet13\\\\SportSeeP13\\\\front-end\\\\src\\\\components\\\\Bonjour\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport './style.scss';\nimport useFetch from '../../hooks/useFetch';\nimport { USER_MAIN_DATA } from '../../data/mocked-data';\nimport { Modelisation } from '../../data/Modelisation';\nimport PropTypes from 'prop-types';\n\n/**\r\n *\r\n * @typedef PropType\r\n * @property {string} userId\r\n */\n\n/**\r\n * @description Bonjour is a component that takes in prop an userId and returns datas from this userId\r\n * @param {PropType} userId\r\n * @return {object} Returns an object of datas if load data through API / if load data from\r\n * mocked datas file\r\n *\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bonjour = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const {\n    data,\n    error\n  } = useFetch(`http://localhost:3000/user/${userId}`, getUserDataMockWithId());\n  Bonjour.propTypes = {\n    /**\r\n     * User's datas\r\n     */\n    userId: PropTypes.string.isRequired\n  };\n\n  /**\r\n   * @description getUserDataMockWithId is a function that find the own datas\r\n   * from the user affected by userId\r\n   * @return { object } Returns userData\r\n   *\r\n   */\n\n  function getUserDataMockWithId() {\n    const userData = USER_MAIN_DATA.find(user => +user.id === +userId);\n    return userData;\n  }\n\n  /**\r\n  * @description getData is a function that build through the class Modelisation\r\n  * an object of datas\r\n   \r\n  * @returns {object} Returns datas from modelisation.formatUserName()\r\n  */\n\n  function getData() {\n    const modelisation = new Modelisation(data);\n    return modelisation.formatUserName();\n  }\n  if (data !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bonjour\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Bonjour \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: getData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"F\\xE9licitation ! Vous avez explos\\xE9 vos objectifs hier \\uD83D\\uDC4F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n  // IN CASE OF SERVER ERROR\n  else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-api\",\n      children: \"ERREUR DANS LE CHARGEMENT DE L'API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(Bonjour, \"nxGcM3ZnyDIOqE8/kWT+fd3s9HI=\", false, function () {\n  return [useFetch];\n});\n_c = Bonjour;\nexport default Bonjour;\nvar _c;\n$RefreshReg$(_c, \"Bonjour\");","map":{"version":3,"names":["useFetch","USER_MAIN_DATA","Modelisation","PropTypes","Bonjour","userId","data","error","getUserDataMockWithId","propTypes","string","isRequired","userData","find","user","id","getData","modelisation","formatUserName"],"sources":["C:/Users/pierr/Documents/openclassroom/Projet13/SportSeeP13/front-end/src/components/Bonjour/index.jsx"],"sourcesContent":["import './style.scss'\r\nimport useFetch from '../../hooks/useFetch'\r\nimport { USER_MAIN_DATA } from '../../data/mocked-data'\r\nimport { Modelisation } from '../../data/Modelisation'\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n *\r\n * @typedef PropType\r\n * @property {string} userId\r\n */\r\n\r\n/**\r\n * @description Bonjour is a component that takes in prop an userId and returns datas from this userId\r\n * @param {PropType} userId\r\n * @return {object} Returns an object of datas if load data through API / if load data from\r\n * mocked datas file\r\n *\r\n */\r\n\r\nconst Bonjour = ({ userId }) => {\r\n  const { data, error } = useFetch(\r\n    `http://localhost:3000/user/${userId}`,\r\n    getUserDataMockWithId()\r\n  )\r\n\r\n  Bonjour.propTypes = {\r\n    /**\r\n     * User's datas\r\n     */\r\n    userId: PropTypes.string.isRequired,\r\n  }\r\n\r\n  /**\r\n   * @description getUserDataMockWithId is a function that find the own datas\r\n   * from the user affected by userId\r\n   * @return { object } Returns userData\r\n   *\r\n   */\r\n\r\n  function getUserDataMockWithId() {\r\n    const userData = USER_MAIN_DATA.find((user) => +user.id === +userId)\r\n\r\n    return userData\r\n  }\r\n\r\n  /**\r\n  * @description getData is a function that build through the class Modelisation\r\n  * an object of datas\r\n   \r\n  * @returns {object} Returns datas from modelisation.formatUserName()\r\n  */\r\n\r\n  function getData() {\r\n    const modelisation = new Modelisation(data)\r\n    return modelisation.formatUserName()\r\n  }\r\n\r\n  if (data !== null) {\r\n    return (\r\n      <div className=\"bonjour\">\r\n        <h1>\r\n          Bonjour <span>{getData()}</span>\r\n        </h1>\r\n        <p>F√©licitation ! Vous avez explos√© vos objectifs hier üëè</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // IN CASE OF SERVER ERROR\r\n  else {\r\n    return <div className=\"error-api\">ERREUR DANS LE CHARGEMENT DE L'API</div>\r\n  }\r\n}\r\n\r\nexport default Bonjour\r\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA,MAAMC,OAAO,GAAG,QAAgB;EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC;EACzB,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGP,QAAQ,CAC7B,8BAA6BK,MAAO,EAAC,EACtCG,qBAAqB,EAAE,CACxB;EAEDJ,OAAO,CAACK,SAAS,GAAG;IAClB;AACJ;AACA;IACIJ,MAAM,EAAEF,SAAS,CAACO,MAAM,CAACC;EAC3B,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;;EAEE,SAASH,qBAAqB,GAAG;IAC/B,MAAMI,QAAQ,GAAGX,cAAc,CAACY,IAAI,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,EAAE,KAAK,CAACV,MAAM,CAAC;IAEpE,OAAOO,QAAQ;EACjB;;EAEA;AACF;AACA;AACA;AACA;AACA;;EAEE,SAASI,OAAO,GAAG;IACjB,MAAMC,YAAY,GAAG,IAAIf,YAAY,CAACI,IAAI,CAAC;IAC3C,OAAOW,YAAY,CAACC,cAAc,EAAE;EACtC;EAEA,IAAIZ,IAAI,KAAK,IAAI,EAAE;IACjB,oBACE;MAAK,SAAS,EAAC,SAAS;MAAA,wBACtB;QAAA,oCACU;UAAA,UAAOU,OAAO;QAAE;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7B,eACL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6D;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD;EAEV;;EAEA;EAAA,KACK;IACH,oBAAO;MAAK,SAAS,EAAC,WAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyC;EAC5E;AACF,CAAC;AAAA,GArDKZ,OAAO;EAAA,QACaJ,QAAQ;AAAA;AAAA,KAD5BI,OAAO;AAuDb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}