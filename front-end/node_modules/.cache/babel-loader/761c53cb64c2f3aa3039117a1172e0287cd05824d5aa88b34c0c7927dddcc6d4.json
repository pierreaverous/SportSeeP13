{"ast":null,"code":"var _jsxFileName = \"/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/components/DiagrammeScore/index.jsx\",\n  _s = $RefreshSig$();\nimport './style.scss';\nimport { PieChart, Pie, ResponsiveContainer } from 'recharts';\nimport { USER_MAIN_DATA } from '../../data/mocked-data';\nimport { Modelisation } from '../../data/Modelisation';\nimport useFetch from '../../hooks/useFetch';\nimport PropTypes from 'prop-types';\n\n/**\n *\n * @typedef PropType\n * @property {number} userId\n */\n\n/**\n * @description DiagrammeScore is a component that takes in prop an userId and returns datas from this userId\n * @param {PropType} userId\n * @return {object} Returns an object of datas if load data through API / if load data from\n * mocked datas file\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DiagrammeScore(_ref) {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const {\n    data,\n    error\n  } = useFetch(`http://localhost:3000/user/${userId}`, getUserDataMockWithId());\n  DiagrammeScore.propTypes = {\n    /**\n     * User's datas\n     */\n    userId: PropTypes.number.isRequired\n  };\n\n  /**\n   * @description getUserDataMockWithId is a function that find the own datas\n   * from the user affected by userId\n   * @return { object } Returns userData\n   *\n   */\n\n  function getUserDataMockWithId() {\n    const userData = USER_MAIN_DATA.find(user => +user.id === +userId);\n    return userData;\n  }\n  /**\n  * @description getData is a function that build through the class Modelisation\n  * an object of datas\n   \n  * @returns {object} Returns datas from modelisation.formatDataScore()\n  */\n\n  function getData() {\n    const modelisation = new Modelisation(data);\n    return modelisation.formatDataScore();\n  }\n  if (data !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `diagrammes-item diagrammes_diagramme-score`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-score\",\n        children: \"Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"objectif\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"objectif-score\",\n          children: [getData(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"objectif-score-texte\",\n          children: \"de votre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"objectif-score-texte\",\n          children: \"objectif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 400,\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: [{\n              name: 'empty-score',\n              value: 100 - getData()\n            }, {\n              name: 'score',\n              value: getData()\n            }],\n            dataKey: \"value\",\n            cx: \"50%\",\n            cy: \"50%\",\n            startAngle: 90,\n            endAngle: -270,\n            cornerRadius: 40,\n            innerRadius: 80,\n            outerRadius: 90,\n            fill: \"#FF0000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(DiagrammeScore, \"nxGcM3ZnyDIOqE8/kWT+fd3s9HI=\", false, function () {\n  return [useFetch];\n});\n_c = DiagrammeScore;\nexport default DiagrammeScore;\nvar _c;\n$RefreshReg$(_c, \"DiagrammeScore\");","map":{"version":3,"names":["PieChart","Pie","ResponsiveContainer","USER_MAIN_DATA","Modelisation","useFetch","PropTypes","DiagrammeScore","userId","data","error","getUserDataMockWithId","propTypes","number","isRequired","userData","find","user","id","getData","modelisation","formatDataScore","name","value"],"sources":["/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/components/DiagrammeScore/index.jsx"],"sourcesContent":["import './style.scss'\nimport { PieChart, Pie, ResponsiveContainer } from 'recharts'\n\nimport { USER_MAIN_DATA } from '../../data/mocked-data'\nimport { Modelisation } from '../../data/Modelisation'\nimport useFetch from '../../hooks/useFetch'\nimport PropTypes from 'prop-types'\n\n/**\n *\n * @typedef PropType\n * @property {number} userId\n */\n\n/**\n * @description DiagrammeScore is a component that takes in prop an userId and returns datas from this userId\n * @param {PropType} userId\n * @return {object} Returns an object of datas if load data through API / if load data from\n * mocked datas file\n *\n */\n\nfunction DiagrammeScore({ userId }) {\n  const { data, error } = useFetch(\n    `http://localhost:3000/user/${userId}`,\n    getUserDataMockWithId()\n  )\n\n  DiagrammeScore.propTypes = {\n    /**\n     * User's datas\n     */\n    userId: PropTypes.number.isRequired,\n  }\n\n  /**\n   * @description getUserDataMockWithId is a function that find the own datas\n   * from the user affected by userId\n   * @return { object } Returns userData\n   *\n   */\n\n  function getUserDataMockWithId() {\n    const userData = USER_MAIN_DATA.find((user) => +user.id === +userId)\n    return userData\n  }\n  /**\n  * @description getData is a function that build through the class Modelisation\n  * an object of datas\n   \n  * @returns {object} Returns datas from modelisation.formatDataScore()\n  */\n\n  function getData() {\n    const modelisation = new Modelisation(data)\n    return modelisation.formatDataScore()\n  }\n\n  if (data !== null) {\n    return (\n      <div className={`diagrammes-item diagrammes_diagramme-score`}>\n        <p className=\"title-score\">Score</p>\n        <div className=\"objectif\">\n          <p className=\"objectif-score\">{getData()}%</p>\n          <p className=\"objectif-score-texte\">de votre</p>\n          <p className=\"objectif-score-texte\">objectif</p>\n        </div>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <PieChart width={400} height={400}>\n            <Pie\n              data={[\n                {\n                  name: 'empty-score',\n                  value: 100 - getData(),\n                },\n                {\n                  name: 'score',\n                  value: getData(),\n                },\n              ]}\n              dataKey=\"value\"\n              cx=\"50%\"\n              cy=\"50%\"\n              startAngle={90}\n              endAngle={-270}\n              cornerRadius={40}\n              innerRadius={80}\n              outerRadius={90}\n              fill=\"#FF0000\"\n            />\n          </PieChart>\n        </ResponsiveContainer>\n      </div>\n    )\n  }\n}\n\nexport default DiagrammeScore\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,QAAQ,EAAEC,GAAG,EAAEC,mBAAmB,QAAQ,UAAU;AAE7D,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA,SAASC,cAAc,OAAa;EAAA;EAAA,IAAZ;IAAEC;EAAO,CAAC;EAChC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGL,QAAQ,CAC7B,8BAA6BG,MAAO,EAAC,EACtCG,qBAAqB,EAAE,CACxB;EAEDJ,cAAc,CAACK,SAAS,GAAG;IACzB;AACJ;AACA;IACIJ,MAAM,EAAEF,SAAS,CAACO,MAAM,CAACC;EAC3B,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;;EAEE,SAASH,qBAAqB,GAAG;IAC/B,MAAMI,QAAQ,GAAGZ,cAAc,CAACa,IAAI,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,EAAE,KAAK,CAACV,MAAM,CAAC;IACpE,OAAOO,QAAQ;EACjB;EACA;AACF;AACA;AACA;AACA;AACA;;EAEE,SAASI,OAAO,GAAG;IACjB,MAAMC,YAAY,GAAG,IAAIhB,YAAY,CAACK,IAAI,CAAC;IAC3C,OAAOW,YAAY,CAACC,eAAe,EAAE;EACvC;EAEA,IAAIZ,IAAI,KAAK,IAAI,EAAE;IACjB,oBACE;MAAK,SAAS,EAAG,4CAA4C;MAAA,wBAC3D;QAAG,SAAS,EAAC,aAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAU,eACpC;QAAK,SAAS,EAAC,UAAU;QAAA,wBACvB;UAAG,SAAS,EAAC,gBAAgB;UAAA,WAAEU,OAAO,EAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eAC9C;UAAG,SAAS,EAAC,sBAAsB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eAChD;UAAG,SAAS,EAAC,sBAAsB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5C,eACN,QAAC,mBAAmB;QAAC,KAAK,EAAC,MAAM;QAAC,MAAM,EAAC,MAAM;QAAA,uBAC7C,QAAC,QAAQ;UAAC,KAAK,EAAE,GAAI;UAAC,MAAM,EAAE,GAAI;UAAA,uBAChC,QAAC,GAAG;YACF,IAAI,EAAE,CACJ;cACEG,IAAI,EAAE,aAAa;cACnBC,KAAK,EAAE,GAAG,GAAGJ,OAAO;YACtB,CAAC,EACD;cACEG,IAAI,EAAE,OAAO;cACbC,KAAK,EAAEJ,OAAO;YAChB,CAAC,CACD;YACF,OAAO,EAAC,OAAO;YACf,EAAE,EAAC,KAAK;YACR,EAAE,EAAC,KAAK;YACR,UAAU,EAAE,EAAG;YACf,QAAQ,EAAE,CAAC,GAAI;YACf,YAAY,EAAE,EAAG;YACjB,WAAW,EAAE,EAAG;YAChB,WAAW,EAAE,EAAG;YAChB,IAAI,EAAC;UAAS;YAAA;YAAA;YAAA;UAAA;QACd;UAAA;UAAA;UAAA;QAAA;MACO;QAAA;QAAA;QAAA;MAAA,QACS;IAAA;MAAA;MAAA;MAAA;IAAA,QAClB;EAEV;AACF;AAAC,GAzEQZ,cAAc;EAAA,QACGF,QAAQ;AAAA;AAAA,KADzBE,cAAc;AA2EvB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}