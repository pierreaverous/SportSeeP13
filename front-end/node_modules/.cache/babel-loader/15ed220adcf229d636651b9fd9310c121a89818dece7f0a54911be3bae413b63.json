{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n/**\r\n * @description useFetch takes an url and a mock data file as arguments\r\n *\r\n * @param {string} url  The address url used for fetch the API\r\n * @param {string} mock  The mock datas used for fetch the datas\r\n *\r\n * @return {Object} Return user datas from API or mock data file\r\n */\n\nfunction useFetch(url, mock) {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(false);\n  const DATA_FROM_API = true;\n  useEffect(() => {\n    if (DATA_FROM_API) {\n      fetchData();\n    } else {\n      setData(mock);\n    }\n  }, []);\n\n  /**\r\n   * The function fetchData returns a promise that resolves to an object containing the data\r\n   *\r\n   * @return {Promise} Return user datas or error\r\n   */\n\n  async function fetchData() {\n    try {\n      const response = await axios.get(url);\n      setData(response.data.data);\n    } catch (error) {\n      setError(true);\n      console.log('erreur API / vérifier que votre serveur est bien lancé');\n    }\n  }\n  return {\n    data,\n    error\n  };\n}\n_s(useFetch, \"N0th3ZFDN+Kp8tlE0nhcPaJ3vjE=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","axios","useFetch","url","mock","data","setData","error","setError","DATA_FROM_API","fetchData","response","get","console","log"],"sources":["C:/Users/pierr/Documents/openclassroom/Projet13/SportSeeP13/front-end/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n/**\r\n * @description useFetch takes an url and a mock data file as arguments\r\n *\r\n * @param {string} url  The address url used for fetch the API\r\n * @param {string} mock  The mock datas used for fetch the datas\r\n *\r\n * @return {Object} Return user datas from API or mock data file\r\n */\r\n\r\nfunction useFetch(url, mock) {\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(false)\r\n\r\n  const DATA_FROM_API = true\r\n\r\n  useEffect(() => {\r\n    if (DATA_FROM_API) {\r\n      fetchData()\r\n    } else {\r\n      setData(mock)\r\n    }\r\n  }, [])\r\n\r\n  /**\r\n   * The function fetchData returns a promise that resolves to an object containing the data\r\n   *\r\n   * @return {Promise} Return user datas or error\r\n   */\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const response = await axios.get(url)\r\n      setData(response.data.data)\r\n    } catch (error) {\r\n      setError(true)\r\n\r\n      console.log('erreur API / vérifier que votre serveur est bien lancé')\r\n    }\r\n  }\r\n  return { data, error }\r\n}\r\n\r\nexport default useFetch\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAQ,CAACC,GAAG,EAAEC,IAAI,EAAE;EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMU,aAAa,GAAG,IAAI;EAE1BT,SAAS,CAAC,MAAM;IACd,IAAIS,aAAa,EAAE;MACjBC,SAAS,EAAE;IACb,CAAC,MAAM;MACLJ,OAAO,CAACF,IAAI,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;AACA;AACA;;EAEE,eAAeM,SAAS,GAAG;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACT,GAAG,CAAC;MACrCG,OAAO,CAACK,QAAQ,CAACN,IAAI,CAACA,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,QAAQ,CAAC,IAAI,CAAC;MAEdK,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;IACvE;EACF;EACA,OAAO;IAAET,IAAI;IAAEE;EAAM,CAAC;AACxB;AAAC,GA/BQL,QAAQ;AAiCjB,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}