{"ast":null,"code":"import { initRange } from \"./init.js\";\nexport const implicit = Symbol(\"implicit\");\nexport default function ordinal() {\n  var index = new Map(),\n    domain = [],\n    range = [],\n    unknown = implicit;\n  function scale(d) {\n    var key = d + \"\",\n      i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new Map();\n    for (const value of _) {\n      const key = value + \"\";\n      if (index.has(key)) continue;\n      index.set(key, domain.push(value));\n    }\n    return scale;\n  };\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  scale.copy = function () {\n    return ordinal(domain, range).unknown(unknown);\n  };\n  initRange.apply(scale, arguments);\n  return scale;\n}","map":{"version":3,"names":["initRange","implicit","Symbol","ordinal","index","Map","domain","range","unknown","scale","d","key","i","get","set","push","length","_","arguments","slice","value","has","Array","from","copy","apply"],"sources":["C:/Users/pierr/Documents/openclassroom/Projet13/SportSeeP13/front-end/node_modules/d3-scale/src/ordinal.js"],"sourcesContent":["import {initRange} from \"./init.js\";\r\n\r\nexport const implicit = Symbol(\"implicit\");\r\n\r\nexport default function ordinal() {\r\n  var index = new Map(),\r\n      domain = [],\r\n      range = [],\r\n      unknown = implicit;\r\n\r\n  function scale(d) {\r\n    var key = d + \"\", i = index.get(key);\r\n    if (!i) {\r\n      if (unknown !== implicit) return unknown;\r\n      index.set(key, i = domain.push(d));\r\n    }\r\n    return range[(i - 1) % range.length];\r\n  }\r\n\r\n  scale.domain = function(_) {\r\n    if (!arguments.length) return domain.slice();\r\n    domain = [], index = new Map();\r\n    for (const value of _) {\r\n      const key = value + \"\";\r\n      if (index.has(key)) continue;\r\n      index.set(key, domain.push(value));\r\n    }\r\n    return scale;\r\n  };\r\n\r\n  scale.range = function(_) {\r\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\r\n  };\r\n\r\n  scale.unknown = function(_) {\r\n    return arguments.length ? (unknown = _, scale) : unknown;\r\n  };\r\n\r\n  scale.copy = function() {\r\n    return ordinal(domain, range).unknown(unknown);\r\n  };\r\n\r\n  initRange.apply(scale, arguments);\r\n\r\n  return scale;\r\n}\r\n"],"mappings":"AAAA,SAAQA,SAAS,QAAO,WAAW;AAEnC,OAAO,MAAMC,QAAQ,GAAGC,MAAM,CAAC,UAAU,CAAC;AAE1C,eAAe,SAASC,OAAO,GAAG;EAChC,IAAIC,KAAK,GAAG,IAAIC,GAAG,EAAE;IACjBC,MAAM,GAAG,EAAE;IACXC,KAAK,GAAG,EAAE;IACVC,OAAO,GAAGP,QAAQ;EAEtB,SAASQ,KAAK,CAACC,CAAC,EAAE;IAChB,IAAIC,GAAG,GAAGD,CAAC,GAAG,EAAE;MAAEE,CAAC,GAAGR,KAAK,CAACS,GAAG,CAACF,GAAG,CAAC;IACpC,IAAI,CAACC,CAAC,EAAE;MACN,IAAIJ,OAAO,KAAKP,QAAQ,EAAE,OAAOO,OAAO;MACxCJ,KAAK,CAACU,GAAG,CAACH,GAAG,EAAEC,CAAC,GAAGN,MAAM,CAACS,IAAI,CAACL,CAAC,CAAC,CAAC;IACpC;IACA,OAAOH,KAAK,CAAC,CAACK,CAAC,GAAG,CAAC,IAAIL,KAAK,CAACS,MAAM,CAAC;EACtC;EAEAP,KAAK,CAACH,MAAM,GAAG,UAASW,CAAC,EAAE;IACzB,IAAI,CAACC,SAAS,CAACF,MAAM,EAAE,OAAOV,MAAM,CAACa,KAAK,EAAE;IAC5Cb,MAAM,GAAG,EAAE,EAAEF,KAAK,GAAG,IAAIC,GAAG,EAAE;IAC9B,KAAK,MAAMe,KAAK,IAAIH,CAAC,EAAE;MACrB,MAAMN,GAAG,GAAGS,KAAK,GAAG,EAAE;MACtB,IAAIhB,KAAK,CAACiB,GAAG,CAACV,GAAG,CAAC,EAAE;MACpBP,KAAK,CAACU,GAAG,CAACH,GAAG,EAAEL,MAAM,CAACS,IAAI,CAACK,KAAK,CAAC,CAAC;IACpC;IACA,OAAOX,KAAK;EACd,CAAC;EAEDA,KAAK,CAACF,KAAK,GAAG,UAASU,CAAC,EAAE;IACxB,OAAOC,SAAS,CAACF,MAAM,IAAIT,KAAK,GAAGe,KAAK,CAACC,IAAI,CAACN,CAAC,CAAC,EAAER,KAAK,IAAIF,KAAK,CAACY,KAAK,EAAE;EAC1E,CAAC;EAEDV,KAAK,CAACD,OAAO,GAAG,UAASS,CAAC,EAAE;IAC1B,OAAOC,SAAS,CAACF,MAAM,IAAIR,OAAO,GAAGS,CAAC,EAAER,KAAK,IAAID,OAAO;EAC1D,CAAC;EAEDC,KAAK,CAACe,IAAI,GAAG,YAAW;IACtB,OAAOrB,OAAO,CAACG,MAAM,EAAEC,KAAK,CAAC,CAACC,OAAO,CAACA,OAAO,CAAC;EAChD,CAAC;EAEDR,SAAS,CAACyB,KAAK,CAAChB,KAAK,EAAES,SAAS,CAAC;EAEjC,OAAOT,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}