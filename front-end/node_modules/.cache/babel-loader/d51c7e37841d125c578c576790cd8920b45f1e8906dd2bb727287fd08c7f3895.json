{"ast":null,"code":"var _jsxFileName = \"/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/hooks/useFetch.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useFetch(url, mock) {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(false);\n  const DATA_FROM_API = true;\n  useEffect(() => {\n    if (DATA_FROM_API) {\n      fetchData();\n    } else {\n      setData(mock);\n    }\n  }, []);\n  async function fetchData() {\n    try {\n      const response = await axios.get(url);\n      setData(response.data.data);\n    } catch (error) {\n      setError(true);\n      console.log('erreur dans API / serveur arrete');\n      return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  return {\n    data,\n    error\n  };\n}\n_s(useFetch, \"N0th3ZFDN+Kp8tlE0nhcPaJ3vjE=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","Navigate","axios","useFetch","url","mock","data","setData","error","setError","DATA_FROM_API","fetchData","response","get","console","log"],"sources":["/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport axios from 'axios'\n\nfunction useFetch(url, mock) {\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(false)\n\n  const DATA_FROM_API = true\n\n  useEffect(() => {\n    if (DATA_FROM_API) {\n      fetchData()\n    } else {\n      setData(mock)\n    }\n  }, [])\n\n  async function fetchData() {\n    try {\n      const response = await axios.get(url)\n      setData(response.data.data)\n    } catch (error) {\n      setError(true)\n      console.log('erreur dans API / serveur arrete')\n      return <Error />\n    }\n  }\n  return { data, error }\n}\n\nexport default useFetch\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,SAASC,QAAQ,CAACC,GAAG,EAAEC,IAAI,EAAE;EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMW,aAAa,GAAG,IAAI;EAE1BV,SAAS,CAAC,MAAM;IACd,IAAIU,aAAa,EAAE;MACjBC,SAAS,EAAE;IACb,CAAC,MAAM;MACLJ,OAAO,CAACF,IAAI,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeM,SAAS,GAAG;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACT,GAAG,CAAC;MACrCG,OAAO,CAACK,QAAQ,CAACN,IAAI,CAACA,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,QAAQ,CAAC,IAAI,CAAC;MACdK,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/C,oBAAO,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA,QAAG;IAClB;EACF;EACA,OAAO;IAAET,IAAI;IAAEE;EAAM,CAAC;AACxB;AAAC,GAzBQL,QAAQ;AA2BjB,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}