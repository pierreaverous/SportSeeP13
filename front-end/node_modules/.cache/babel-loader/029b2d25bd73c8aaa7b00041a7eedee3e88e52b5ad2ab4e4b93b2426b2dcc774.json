{"ast":null,"code":"var _jsxFileName = \"/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/components/Bonjour/index.jsx\",\n  _s = $RefreshSig$();\nimport './style.scss';\nimport useFetch from '../../hooks/useFetch';\nimport { USER_MAIN_DATA } from '../../data/mocked-data';\nimport { Modelisation } from '../../data/Modelisation';\nimport PropTypes from 'prop-types';\n\n/**\n *\n * @typedef PropType\n * @property {number} userId\n */\n\n/**\n * Bonjour is a component that takes in prop an userId and returns datas from this userId\n * @param {PropType} userId\n * @return {object} Returns an object of datas if load data through API / if load data from\n * mocked datas file\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bonjour = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const {\n    data,\n    error\n  } = useFetch(`http://localhost:3000/user/${userId}`, getUserDataMockWithId());\n\n  /**\n   * getUserDataMockWithId is a function that find the own datas\n   * from the user affected by userId\n   * @return { object } Returns userData\n   *\n   */\n\n  function getUserDataMockWithId() {\n    const userData = USER_MAIN_DATA.find(user => +user.id === +userId);\n    return userData;\n  }\n\n  /**\n  * getData is a function that build through the class Modelisation\n  * an object of datas\n   \n  * @returns {object} Returns datas from modelisation.formatUserName()\n   */\n\n  function getData() {\n    const modelisation = new Modelisation(data);\n    return modelisation.formatUserName();\n  }\n  if (data !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bonjour\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Bonjour \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: getData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"F\\xE9licitation ! Vous avez explos\\xE9 vos objectifs hier \\uD83D\\uDC4F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  //EN CAS D'ERREUR SERVEUR\n  // else {\n  //   return <div className=\"error-api\">ERREUR DANS LE CHARGEMENT DE L'API</div>\n  // }\n};\n_s(Bonjour, \"nxGcM3ZnyDIOqE8/kWT+fd3s9HI=\", false, function () {\n  return [useFetch];\n});\n_c = Bonjour;\nexport default Bonjour;\nBonjour.propTypes = {\n  /**\n   * User's datas\n   */\n  userId: PropTypes.number.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Bonjour\");","map":{"version":3,"names":["useFetch","USER_MAIN_DATA","Modelisation","PropTypes","Bonjour","userId","data","error","getUserDataMockWithId","userData","find","user","id","getData","modelisation","formatUserName","propTypes","number","isRequired"],"sources":["/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/components/Bonjour/index.jsx"],"sourcesContent":["import './style.scss'\nimport useFetch from '../../hooks/useFetch'\nimport { USER_MAIN_DATA } from '../../data/mocked-data'\nimport { Modelisation } from '../../data/Modelisation'\nimport PropTypes from 'prop-types'\n\n/**\n *\n * @typedef PropType\n * @property {number} userId\n */\n\n/**\n * Bonjour is a component that takes in prop an userId and returns datas from this userId\n * @param {PropType} userId\n * @return {object} Returns an object of datas if load data through API / if load data from\n * mocked datas file\n *\n */\n\nconst Bonjour = ({ userId }) => {\n  const { data, error } = useFetch(\n    `http://localhost:3000/user/${userId}`,\n    getUserDataMockWithId()\n  )\n\n  /**\n   * getUserDataMockWithId is a function that find the own datas\n   * from the user affected by userId\n   * @return { object } Returns userData\n   *\n   */\n\n  function getUserDataMockWithId() {\n    const userData = USER_MAIN_DATA.find((user) => +user.id === +userId)\n\n    return userData\n  }\n\n  /**\n  * getData is a function that build through the class Modelisation\n  * an object of datas\n   \n  * @returns {object} Returns datas from modelisation.formatUserName()\n   */\n\n  function getData() {\n    const modelisation = new Modelisation(data)\n    return modelisation.formatUserName()\n  }\n\n  if (data !== null) {\n    return (\n      <div className=\"bonjour\">\n        <h1>\n          Bonjour <span>{getData()}</span>\n        </h1>\n        <p>F√©licitation ! Vous avez explos√© vos objectifs hier üëè</p>\n      </div>\n    )\n  }\n\n  //EN CAS D'ERREUR SERVEUR\n  // else {\n  //   return <div className=\"error-api\">ERREUR DANS LE CHARGEMENT DE L'API</div>\n  // }\n}\n\nexport default Bonjour\n\nBonjour.propTypes = {\n  /**\n   * User's datas\n   */\n  userId: PropTypes.number.isRequired,\n}\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA,MAAMC,OAAO,GAAG,QAAgB;EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC;EACzB,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGP,QAAQ,CAC7B,8BAA6BK,MAAO,EAAC,EACtCG,qBAAqB,EAAE,CACxB;;EAED;AACF;AACA;AACA;AACA;AACA;;EAEE,SAASA,qBAAqB,GAAG;IAC/B,MAAMC,QAAQ,GAAGR,cAAc,CAACS,IAAI,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,EAAE,KAAK,CAACP,MAAM,CAAC;IAEpE,OAAOI,QAAQ;EACjB;;EAEA;AACF;AACA;AACA;AACA;AACA;;EAEE,SAASI,OAAO,GAAG;IACjB,MAAMC,YAAY,GAAG,IAAIZ,YAAY,CAACI,IAAI,CAAC;IAC3C,OAAOQ,YAAY,CAACC,cAAc,EAAE;EACtC;EAEA,IAAIT,IAAI,KAAK,IAAI,EAAE;IACjB,oBACE;MAAK,SAAS,EAAC,SAAS;MAAA,wBACtB;QAAA,oCACU;UAAA,UAAOO,OAAO;QAAE;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7B,eACL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6D;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD;EAEV;;EAEA;EACA;EACA;EACA;AACF,CAAC;AAAA,GA9CKT,OAAO;EAAA,QACaJ,QAAQ;AAAA;AAAA,KAD5BI,OAAO;AAgDb,eAAeA,OAAO;AAEtBA,OAAO,CAACY,SAAS,GAAG;EAClB;AACF;AACA;EACEX,MAAM,EAAEF,SAAS,CAACc,MAAM,CAACC;AAC3B,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}