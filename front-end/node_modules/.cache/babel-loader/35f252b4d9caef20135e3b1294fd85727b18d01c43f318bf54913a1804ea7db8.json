{"ast":null,"code":"// import { USER_MAIN_DATA } from '../data/mocked-data'\n// import { USER_ACTIVITY } from '../data/mocked-data'\n// import { USER_AVERAGE_SESSIONS } from '../data/mocked-data'\n// import { USER_PERFORMANCE } from '../data/mocked-data'\n\nexport class Modelisation {\n  constructor(data) {\n    this.data = data;\n  }\n\n  //component Bonjour\n  formatUserName() {\n    const dataFormated = this.data.userInfos.firstName;\n    return dataFormated;\n  }\n\n  // composant Energie\n  formatDataEnergy(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          calorieCount: element.keyData.calorieCount,\n          proteinCount: element.keyData.proteinCount,\n          carbohydrateCount: element.keyData.carbohydrateCount,\n          lipidCount: element.keyData.lipidCount\n        };\n      }\n    }\n  }\n  // composant Diagramme Score\n  formatDataScore(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          name: 'score',\n          value: element.todayScore * 100\n        };\n      }\n    }\n  }\n  //graphique\n  formatDataActivity() {\n    var _this$data;\n    const dataFormated = (_this$data = this.data) === null || _this$data === void 0 ? void 0 : _this$data.sessions.map((item, index) => {\n      return {\n        name: index + 1,\n        uv: item.kilogram,\n        pv: item.calories\n      };\n    });\n    return dataFormated;\n  }\n  // composant Diagramme courbe\n  formatDataSessions() {\n    var _this$data2;\n    const dataFormated = (_this$data2 = this.data) === null || _this$data2 === void 0 ? void 0 : _this$data2.sessions.map(item => {\n      // convertit les nombres en jours\n      switch (item.day) {\n        case 1:\n          item.day = 'L';\n          break;\n        case 2:\n          item.day = 'M';\n          break;\n        case 3:\n          item.day = 'M';\n          break;\n        case 4:\n          item.day = 'J';\n          break;\n        case 5:\n          item.day = 'V';\n          break;\n        case 6:\n          item.day = 'S';\n          break;\n        case 7:\n          item.day = 'D';\n          break;\n        default:\n        // console.log(`erreur de jour ${el.day}.`)\n      }\n\n      return {\n        name: item.day,\n        // uv: 0,\n        pv: item.sessionLength\n        // amt: 0,\n      };\n    });\n\n    return dataFormated;\n  }\n\n  // composant diagramme toile\n  formatDataRadarChart() {\n    var _this$data3;\n    const dataFormated = (_this$data3 = this.data) === null || _this$data3 === void 0 ? void 0 : _this$data3.data.map(item => {\n      console.log(item);\n      console.log(item.kind);\n      console.log(this.data.kind);\n      return {\n        subject: item.kind[this.data.kind[item.kind]],\n        A: item.value\n      };\n    });\n    console.log(subject);\n    return dataFormated;\n  }\n}","map":{"version":3,"names":["Modelisation","constructor","data","formatUserName","dataFormated","userInfos","firstName","formatDataEnergy","params","element","id","toString","calorieCount","keyData","proteinCount","carbohydrateCount","lipidCount","formatDataScore","name","value","todayScore","formatDataActivity","sessions","map","item","index","uv","kilogram","pv","calories","formatDataSessions","day","sessionLength","formatDataRadarChart","console","log","kind","subject","A"],"sources":["/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/data/Modelisation.js"],"sourcesContent":["// import { USER_MAIN_DATA } from '../data/mocked-data'\n// import { USER_ACTIVITY } from '../data/mocked-data'\n// import { USER_AVERAGE_SESSIONS } from '../data/mocked-data'\n// import { USER_PERFORMANCE } from '../data/mocked-data'\n\nexport class Modelisation {\n  constructor(data) {\n    this.data = data\n  }\n\n  //component Bonjour\n  formatUserName() {\n    const dataFormated = this.data.userInfos.firstName\n\n    return dataFormated\n  }\n\n  // composant Energie\n  formatDataEnergy(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          calorieCount: element.keyData.calorieCount,\n          proteinCount: element.keyData.proteinCount,\n          carbohydrateCount: element.keyData.carbohydrateCount,\n          lipidCount: element.keyData.lipidCount,\n        }\n      }\n    }\n  }\n  // composant Diagramme Score\n  formatDataScore(params) {\n    for (let element of this.data) {\n      if (element.id.toString() === params.id) {\n        return {\n          name: 'score',\n          value: element.todayScore * 100,\n        }\n      }\n    }\n  }\n  //graphique\n  formatDataActivity() {\n    const dataFormated = this.data?.sessions.map((item, index) => {\n      return {\n        name: index + 1,\n        uv: item.kilogram,\n        pv: item.calories,\n      }\n    })\n\n    return dataFormated\n  }\n  // composant Diagramme courbe\n  formatDataSessions() {\n    const dataFormated = this.data?.sessions.map((item) => {\n      // convertit les nombres en jours\n      switch (item.day) {\n        case 1:\n          item.day = 'L'\n          break\n\n        case 2:\n          item.day = 'M'\n          break\n        case 3:\n          item.day = 'M'\n          break\n        case 4:\n          item.day = 'J'\n          break\n        case 5:\n          item.day = 'V'\n          break\n        case 6:\n          item.day = 'S'\n          break\n        case 7:\n          item.day = 'D'\n          break\n        default:\n        // console.log(`erreur de jour ${el.day}.`)\n      }\n      return {\n        name: item.day,\n        // uv: 0,\n        pv: item.sessionLength,\n        // amt: 0,\n      }\n    })\n\n    return dataFormated\n  }\n\n  // composant diagramme toile\n  formatDataRadarChart() {\n    const dataFormated = this.data?.data.map((item) => {\n      console.log(item)\n      console.log(item.kind)\n      console.log(this.data.kind)\n      return {\n        subject: item.kind[this.data.kind[item.kind]],\n        A: item.value,\n      }\n    })\n    console.log(subject)\n    return dataFormated\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}