{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pierr\\\\Documents\\\\openclassroom\\\\Projet13\\\\SportSeeP13\\\\front-end\\\\src\\\\components\\\\GraphiqueBarres\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport './style.scss';\nimport { USER_ACTIVITY } from '../../data/mocked-data';\nimport { Modelisation } from '../../data/Modelisation';\nimport useFetch from '../../hooks/useFetch';\nimport CustomTooltip from '../CustomTooltip/index';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport PropTypes from 'prop-types';\n\n/**\r\n *\r\n * @typedef PropType\r\n * @property {string} userId\r\n */\n\n/**\r\n * @description GraphiqueBarres is a component that takes in prop an userId and returns datas from this userId\r\n * @param {PropType} userId\r\n * @return {object} Returns an object of datas if load data through API / if load data from\r\n * mocked datas file\r\n *\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GraphiqueBarres(_ref) {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const {\n    data,\n    error\n  } = useFetch(`http://localhost:3000/user/${userId}/activity`, getUserDataMockWithId());\n  GraphiqueBarres.propTypes = {\n    /**\r\n     * User's datas\r\n     */\n    userId: PropTypes.string.isRequired\n  };\n\n  /**\r\n   * @description getUserDataMockWithId is a function that find the own datas\r\n   * from the user affected by userId\r\n   * @return { object } Returns userData\r\n   *\r\n   */\n\n  function getUserDataMockWithId() {\n    const userData = USER_ACTIVITY.find(user => +user.userId === +userId);\n    return userData;\n  }\n\n  /**\r\n  * @description getData is a function that build through the class Modelisation\r\n  * an object of datas\r\n   \r\n  * @returns {object} Returns datas from modelisation.formatDataActivity()\r\n  */\n  function getData() {\n    const modelisation = new Modelisation(data);\n    return modelisation.formatDataActivity();\n  }\n  if (data !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graphique\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"graphique-title\",\n        children: \"Activit\\xE9 quotidienne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: getData(),\n          barGap: \"10\",\n          margin: {\n            top: 0,\n            right: 60,\n            left: 60,\n            bottom: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Legend, {\n            verticalAlign: \"top\",\n            align: \"right\",\n            iconSize: \"8\",\n            height: 40,\n            wrapperStyle: {\n              top: -22,\n              right: 30\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            vertical: false,\n            strokeDasharray: \"2 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\",\n            strokeWidth: 0,\n            padding: {\n              left: -30,\n              right: -30\n            },\n            dy: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: 1,\n            dataKey: \"uv\",\n            orientation: \"right\",\n            type: \"number\",\n            domain: ['dataMin-1', 'dataMax+1'],\n            allowDecimals: false,\n            tickCount: 4,\n            strokeWidth: 0,\n            dx: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            hide: true,\n            dataKey: \"pv\",\n            yAxisId: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 24\n            }, this),\n            wrapperStyle: {\n              outline: 'none'\n            },\n            cursor: {\n              fill: 'rgba(196, 196, 196, 0.5)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            yAxisId: 1,\n            dataKey: \"uv\",\n            fill: \"var(--dark-grey)\",\n            legendType: \"circle\",\n            name: \"Poids (kg)\",\n            barSize: 10,\n            radius: [10, 10, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            yAxisId: 2,\n            dataKey: \"pv\",\n            fill: \"var(--red)\",\n            legendType: \"circle\",\n            name: \"Calories br\\xFBl\\xE9es (kCal)\",\n            barSize: 10,\n            radius: [10, 10, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(GraphiqueBarres, \"nxGcM3ZnyDIOqE8/kWT+fd3s9HI=\", false, function () {\n  return [useFetch];\n});\n_c = GraphiqueBarres;\nexport default GraphiqueBarres;\nvar _c;\n$RefreshReg$(_c, \"GraphiqueBarres\");","map":{"version":3,"names":["USER_ACTIVITY","Modelisation","useFetch","CustomTooltip","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","PropTypes","GraphiqueBarres","userId","data","error","getUserDataMockWithId","propTypes","string","isRequired","userData","find","user","getData","modelisation","formatDataActivity","top","right","left","bottom","outline","fill"],"sources":["C:/Users/pierr/Documents/openclassroom/Projet13/SportSeeP13/front-end/src/components/GraphiqueBarres/index.jsx"],"sourcesContent":["import './style.scss'\r\n\r\nimport { USER_ACTIVITY } from '../../data/mocked-data'\r\nimport { Modelisation } from '../../data/Modelisation'\r\nimport useFetch from '../../hooks/useFetch'\r\nimport CustomTooltip from '../CustomTooltip/index'\r\n\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts'\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n *\r\n * @typedef PropType\r\n * @property {string} userId\r\n */\r\n\r\n/**\r\n * @description GraphiqueBarres is a component that takes in prop an userId and returns datas from this userId\r\n * @param {PropType} userId\r\n * @return {object} Returns an object of datas if load data through API / if load data from\r\n * mocked datas file\r\n *\r\n */\r\nfunction GraphiqueBarres({ userId }) {\r\n  const { data, error } = useFetch(\r\n    `http://localhost:3000/user/${userId}/activity`,\r\n    getUserDataMockWithId()\r\n  )\r\n\r\n  GraphiqueBarres.propTypes = {\r\n    /**\r\n     * User's datas\r\n     */\r\n    userId: PropTypes.string.isRequired,\r\n  }\r\n\r\n  /**\r\n   * @description getUserDataMockWithId is a function that find the own datas\r\n   * from the user affected by userId\r\n   * @return { object } Returns userData\r\n   *\r\n   */\r\n\r\n  function getUserDataMockWithId() {\r\n    const userData = USER_ACTIVITY.find((user) => +user.userId === +userId)\r\n    return userData\r\n  }\r\n\r\n  /**\r\n  * @description getData is a function that build through the class Modelisation\r\n  * an object of datas\r\n   \r\n  * @returns {object} Returns datas from modelisation.formatDataActivity()\r\n  */\r\n  function getData() {\r\n    const modelisation = new Modelisation(data)\r\n    return modelisation.formatDataActivity()\r\n  }\r\n\r\n  if (data !== null) {\r\n    return (\r\n      <div className=\"graphique\">\r\n        <p className=\"graphique-title\">Activit√© quotidienne</p>\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <BarChart\r\n            data={getData()}\r\n            barGap=\"10\"\r\n            margin={{\r\n              top: 0,\r\n              right: 60,\r\n              left: 60,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <Legend\r\n              verticalAlign=\"top\"\r\n              align=\"right\"\r\n              iconSize=\"8\"\r\n              height={40}\r\n              wrapperStyle={{ top: -22, right: 30 }}\r\n            />\r\n            <CartesianGrid vertical={false} strokeDasharray=\"2 2\" />\r\n            <XAxis\r\n              dataKey=\"name\"\r\n              strokeWidth={0}\r\n              padding={{ left: -30, right: -30 }}\r\n              dy={10}\r\n            />\r\n\r\n            <YAxis\r\n              yAxisId={1}\r\n              dataKey=\"uv\"\r\n              orientation=\"right\"\r\n              type=\"number\"\r\n              domain={['dataMin-1', 'dataMax+1']}\r\n              allowDecimals={false}\r\n              tickCount={4}\r\n              strokeWidth={0}\r\n              dx={50}\r\n            />\r\n            <YAxis hide dataKey=\"pv\" yAxisId={2} />\r\n\r\n            <Tooltip\r\n              content={<CustomTooltip />}\r\n              wrapperStyle={{\r\n                outline: 'none',\r\n              }}\r\n              cursor={{ fill: 'rgba(196, 196, 196, 0.5)' }}\r\n            />\r\n\r\n            <Bar\r\n              yAxisId={1}\r\n              dataKey=\"uv\"\r\n              fill=\"var(--dark-grey)\"\r\n              legendType=\"circle\"\r\n              name=\"Poids (kg)\"\r\n              barSize={10}\r\n              radius={[10, 10, 0, 0]}\r\n            />\r\n            <Bar\r\n              yAxisId={2}\r\n              dataKey=\"pv\"\r\n              fill=\"var(--red)\"\r\n              legendType=\"circle\"\r\n              name=\"Calories br√ªl√©es (kCal)\"\r\n              barSize={10}\r\n              radius={[10, 10, 0, 0]}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GraphiqueBarres\r\n"],"mappings":";;AAAA,OAAO,cAAc;AAErB,SAASA,aAAa,QAAQ,wBAAwB;AACtD,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,aAAa,MAAM,wBAAwB;AAElD,SACEC,QAAQ,EACRC,GAAG,EACHC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,EACNC,mBAAmB,QACd,UAAU;AACjB,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA,SAASC,eAAe,OAAa;EAAA;EAAA,IAAZ;IAAEC;EAAO,CAAC;EACjC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGd,QAAQ,CAC7B,8BAA6BY,MAAO,WAAU,EAC/CG,qBAAqB,EAAE,CACxB;EAEDJ,eAAe,CAACK,SAAS,GAAG;IAC1B;AACJ;AACA;IACIJ,MAAM,EAAEF,SAAS,CAACO,MAAM,CAACC;EAC3B,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;;EAEE,SAASH,qBAAqB,GAAG;IAC/B,MAAMI,QAAQ,GAAGrB,aAAa,CAACsB,IAAI,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACT,MAAM,KAAK,CAACA,MAAM,CAAC;IACvE,OAAOO,QAAQ;EACjB;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,SAASG,OAAO,GAAG;IACjB,MAAMC,YAAY,GAAG,IAAIxB,YAAY,CAACc,IAAI,CAAC;IAC3C,OAAOU,YAAY,CAACC,kBAAkB,EAAE;EAC1C;EAEA,IAAIX,IAAI,KAAK,IAAI,EAAE;IACjB,oBACE;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAG,SAAS,EAAC,iBAAiB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,eACvD,QAAC,mBAAmB;QAAC,KAAK,EAAC,MAAM;QAAC,MAAM,EAAC,MAAM;QAAA,uBAC7C,QAAC,QAAQ;UACP,IAAI,EAAES,OAAO,EAAG;UAChB,MAAM,EAAC,IAAI;UACX,MAAM,EAAE;YACNG,GAAG,EAAE,CAAC;YACNC,KAAK,EAAE,EAAE;YACTC,IAAI,EAAE,EAAE;YACRC,MAAM,EAAE;UACV,CAAE;UAAA,wBAEF,QAAC,MAAM;YACL,aAAa,EAAC,KAAK;YACnB,KAAK,EAAC,OAAO;YACb,QAAQ,EAAC,GAAG;YACZ,MAAM,EAAE,EAAG;YACX,YAAY,EAAE;cAAEH,GAAG,EAAE,CAAC,EAAE;cAAEC,KAAK,EAAE;YAAG;UAAE;YAAA;YAAA;YAAA;UAAA,QACtC,eACF,QAAC,aAAa;YAAC,QAAQ,EAAE,KAAM;YAAC,eAAe,EAAC;UAAK;YAAA;YAAA;YAAA;UAAA,QAAG,eACxD,QAAC,KAAK;YACJ,OAAO,EAAC,MAAM;YACd,WAAW,EAAE,CAAE;YACf,OAAO,EAAE;cAAEC,IAAI,EAAE,CAAC,EAAE;cAAED,KAAK,EAAE,CAAC;YAAG,CAAE;YACnC,EAAE,EAAE;UAAG;YAAA;YAAA;YAAA;UAAA,QACP,eAEF,QAAC,KAAK;YACJ,OAAO,EAAE,CAAE;YACX,OAAO,EAAC,IAAI;YACZ,WAAW,EAAC,OAAO;YACnB,IAAI,EAAC,QAAQ;YACb,MAAM,EAAE,CAAC,WAAW,EAAE,WAAW,CAAE;YACnC,aAAa,EAAE,KAAM;YACrB,SAAS,EAAE,CAAE;YACb,WAAW,EAAE,CAAE;YACf,EAAE,EAAE;UAAG;YAAA;YAAA;YAAA;UAAA,QACP,eACF,QAAC,KAAK;YAAC,IAAI;YAAC,OAAO,EAAC,IAAI;YAAC,OAAO,EAAE;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,eAEvC,QAAC,OAAO;YACN,OAAO,eAAE,QAAC,aAAa;cAAA;cAAA;cAAA;YAAA,QAAI;YAC3B,YAAY,EAAE;cACZG,OAAO,EAAE;YACX,CAAE;YACF,MAAM,EAAE;cAAEC,IAAI,EAAE;YAA2B;UAAE;YAAA;YAAA;YAAA;UAAA,QAC7C,eAEF,QAAC,GAAG;YACF,OAAO,EAAE,CAAE;YACX,OAAO,EAAC,IAAI;YACZ,IAAI,EAAC,kBAAkB;YACvB,UAAU,EAAC,QAAQ;YACnB,IAAI,EAAC,YAAY;YACjB,OAAO,EAAE,EAAG;YACZ,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QACvB,eACF,QAAC,GAAG;YACF,OAAO,EAAE,CAAE;YACX,OAAO,EAAC,IAAI;YACZ,IAAI,EAAC,YAAY;YACjB,UAAU,EAAC,QAAQ;YACnB,IAAI,EAAC,+BAAyB;YAC9B,OAAO,EAAE,EAAG;YACZ,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QACvB;QAAA;UAAA;UAAA;UAAA;QAAA;MACO;QAAA;QAAA;QAAA;MAAA,QACS;IAAA;MAAA;MAAA;MAAA;IAAA,QAClB;EAEV;AACF;AAAC,GA9GQnB,eAAe;EAAA,QACEX,QAAQ;AAAA;AAAA,KADzBW,eAAe;AAgHxB,eAAeA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}