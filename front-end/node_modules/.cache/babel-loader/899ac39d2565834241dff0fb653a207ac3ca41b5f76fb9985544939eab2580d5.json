{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pierr\\\\Documents\\\\openclassroom\\\\Projet13\\\\SportSeeP13\\\\front-end\\\\src\\\\components\\\\DiagrammeCourbe\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport './style.scss';\nimport CustomCursor from '../CustomCursor/index';\nimport { USER_AVERAGE_SESSIONS } from '../../data/mocked-data';\nimport { Modelisation } from '../../data/Modelisation';\nimport useFetch from '../../hooks/useFetch';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport PropTypes from 'prop-types';\n\n/**\r\n *\r\n * @typedef PropType\r\n * @property {string} userId\r\n */\n\n/**\r\n * @description DiagrammeCourbe is a component that takes in prop an userId and returns datas from this userId\r\n * @param {PropType} userId\r\n * @return {object} Returns an object of datas if load data through API / if load data from\r\n * mocked datas file\r\n *\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DiagrammeCourbe(_ref) {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const {\n    data,\n    error\n  } = useFetch(`http://localhost:3000/user/${userId}/average-sessions`, getUserDataMockWithId());\n  DiagrammeCourbe.propTypes = {\n    /**\r\n     * User's datas\r\n     */\n    userId: PropTypes.string.isRequired\n  };\n\n  /**\r\n   * @description getUserDataMockWithId is a function that find the own datas\r\n   * from the user affected by userId\r\n   * @return { object } Returns userData\r\n   *\r\n   */\n\n  function getUserDataMockWithId() {\n    const userData = USER_AVERAGE_SESSIONS.find(user => +user.userId === +userId);\n    return userData;\n  }\n\n  /**\r\n  * @description getData is a function that build through the class Modelisation\r\n  * an object of datas\r\n   \r\n  * @returns {object} Returns datas from modelisation.formatDataSessions()\r\n  */\n\n  function getData() {\n    const modelisation = new Modelisation(data);\n    return modelisation.formatDataSessions();\n  }\n  if (data !== null) {\n    const CustomTooltipCourbe = _ref2 => {\n      let {\n        active,\n        payload\n      } = _ref2;\n      if (active && payload && payload.length) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-tooltip-courbe\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"kg\",\n            children: `${payload[0].value} min`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this);\n      }\n      return null;\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `diagrammes-item diagrammes_diagramme-courbe`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: [\"Dur\\xE9e moyenne des \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), \"sessions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        margin: {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: getData(),\n          margin: {\n            top: 0,\n            right: 25,\n            left: 25,\n            bottom: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Line, {\n            type: \"natural\",\n            dataKey: \"pv\",\n            stroke: \"white\",\n            strokeWidth: 1,\n            fill: \"white\",\n            dot: false,\n            activeDot: {\n              stroke: 'rgba(255,255,255, 0.6)',\n              strokeWidth: 8,\n              r: 5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\",\n            stroke: \"rgba(255,255,255, 0.5)\",\n            strokeWidth: 0,\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            hide: true,\n            padding: {\n              top: 70,\n              bottom: 20\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltipCourbe, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 24\n            }, this),\n            wrapperStyle: {\n              outline: 'none'\n            },\n            cursor: /*#__PURE__*/_jsxDEV(CustomCursor, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(DiagrammeCourbe, \"nxGcM3ZnyDIOqE8/kWT+fd3s9HI=\", false, function () {\n  return [useFetch];\n});\n_c = DiagrammeCourbe;\nexport default DiagrammeCourbe;\nvar _c;\n$RefreshReg$(_c, \"DiagrammeCourbe\");","map":{"version":3,"names":["CustomCursor","USER_AVERAGE_SESSIONS","Modelisation","useFetch","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","PropTypes","DiagrammeCourbe","userId","data","error","getUserDataMockWithId","propTypes","string","isRequired","userData","find","user","getData","modelisation","formatDataSessions","CustomTooltipCourbe","active","payload","length","value","top","right","bottom","left","stroke","strokeWidth","r","fontSize","outline"],"sources":["C:/Users/pierr/Documents/openclassroom/Projet13/SportSeeP13/front-end/src/components/DiagrammeCourbe/index.jsx"],"sourcesContent":["import './style.scss'\r\nimport CustomCursor from '../CustomCursor/index'\r\nimport { USER_AVERAGE_SESSIONS } from '../../data/mocked-data'\r\nimport { Modelisation } from '../../data/Modelisation'\r\nimport useFetch from '../../hooks/useFetch'\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from 'recharts'\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n *\r\n * @typedef PropType\r\n * @property {string} userId\r\n */\r\n\r\n/**\r\n * @description DiagrammeCourbe is a component that takes in prop an userId and returns datas from this userId\r\n * @param {PropType} userId\r\n * @return {object} Returns an object of datas if load data through API / if load data from\r\n * mocked datas file\r\n *\r\n */\r\n\r\nfunction DiagrammeCourbe({ userId }) {\r\n  const { data, error } = useFetch(\r\n    `http://localhost:3000/user/${userId}/average-sessions`,\r\n    getUserDataMockWithId()\r\n  )\r\n  DiagrammeCourbe.propTypes = {\r\n    /**\r\n     * User's datas\r\n     */\r\n    userId: PropTypes.string.isRequired,\r\n  }\r\n\r\n  /**\r\n   * @description getUserDataMockWithId is a function that find the own datas\r\n   * from the user affected by userId\r\n   * @return { object } Returns userData\r\n   *\r\n   */\r\n\r\n  function getUserDataMockWithId() {\r\n    const userData = USER_AVERAGE_SESSIONS.find(\r\n      (user) => +user.userId === +userId\r\n    )\r\n    return userData\r\n  }\r\n\r\n  /**\r\n  * @description getData is a function that build through the class Modelisation\r\n  * an object of datas\r\n   \r\n  * @returns {object} Returns datas from modelisation.formatDataSessions()\r\n  */\r\n\r\n  function getData() {\r\n    const modelisation = new Modelisation(data)\r\n    return modelisation.formatDataSessions()\r\n  }\r\n\r\n  if (data !== null) {\r\n    const CustomTooltipCourbe = ({ active, payload }) => {\r\n      if (active && payload && payload.length) {\r\n        return (\r\n          <div className=\"custom-tooltip-courbe\">\r\n            <p className=\"kg\">{`${payload[0].value} min`}</p>\r\n          </div>\r\n        )\r\n      }\r\n\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div className={`diagrammes-item diagrammes_diagramme-courbe`}>\r\n        <p className=\"title\">\r\n          DurÃ©e moyenne des <br />\r\n          sessions\r\n        </p>\r\n        <ResponsiveContainer\r\n          width=\"100%\"\r\n          margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\r\n        >\r\n          <LineChart\r\n            data={getData()}\r\n            margin={{\r\n              top: 0,\r\n              right: 25,\r\n              left: 25,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <Line\r\n              type=\"natural\"\r\n              dataKey=\"pv\"\r\n              stroke=\"white\"\r\n              strokeWidth={1}\r\n              fill=\"white\"\r\n              dot={false}\r\n              activeDot={{\r\n                stroke: 'rgba(255,255,255, 0.6)',\r\n                strokeWidth: 8,\r\n                r: 5,\r\n              }}\r\n            />\r\n\r\n            <XAxis\r\n              dataKey=\"name\"\r\n              stroke=\"rgba(255,255,255, 0.5)\"\r\n              strokeWidth={0}\r\n              tick={{ fontSize: 12 }}\r\n            />\r\n            <YAxis hide padding={{ top: 70, bottom: 20 }} />\r\n\r\n            <Tooltip\r\n              content={<CustomTooltipCourbe />}\r\n              wrapperStyle={{\r\n                outline: 'none',\r\n              }}\r\n              cursor={<CustomCursor />}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DiagrammeCourbe\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}