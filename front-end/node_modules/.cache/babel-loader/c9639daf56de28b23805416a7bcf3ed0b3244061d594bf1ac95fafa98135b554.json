{"ast":null,"code":"var _jsxFileName = \"/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/components/DiagrammeScore/index.jsx\",\n  _s = $RefreshSig$();\nimport './style.scss';\nimport React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { USER_MAIN_DATA } from '../../data/mocked-data';\nimport { Modelisation } from '../../data/Modelisation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiagrammeScore = props => {\n  _s();\n  const className = props.className;\n  const [data, setData] = useState(null);\n  const [emptyScore, setEmptyScore] = useState(null);\n  const [fulldata, setFullData] = useState(null);\n  const paramsId = useParams();\n  useEffect(() => {\n    const modelisation = new Modelisation(USER_MAIN_DATA);\n    setData(modelisation.formatDataScore(paramsId));\n  }, []);\n  useEffect(() => {\n    setEmptyScore({\n      name: 'empty-score',\n      value: 100 - 32\n      //ajouter style color transparent / enlever legende\n    });\n  }, []);\n  useEffect(() => {\n    setFullData([data, emptyScore]);\n  }, []);\n\n  // const emptyScore = {\n  //   name: 'empty-score',\n  //   // value: 100 - data.value,\n  //   value: 44,\n  //   //ajouter style color transparent / enlever legende\n  // }\n  //creer une data qui recupere l'espace vide (100-taille data modelisation)\n  // console.log(emptyScore)\n  //creer constante globale data 1 + dataEmpty et call dans return\n  // const fulldata = [data, emptyScore]\n\n  // console.log(fulldata)\n\n  // const data02 = [{ name: 'A1', value: 12 }]\n\n  if (data !== null && emptyScore !== null && fulldata !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `diagrammes-item diagrammes_diagramme-${className}`,\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 400,\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: data,\n            dataKey: \"value\",\n            cx: \"50%\",\n            cy: \"50%\",\n            innerRadius: 70,\n            outerRadius: 90,\n            fill: \"#FF0000\",\n            label: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(DiagrammeScore, \"mrqDDtAFEIw4Blg+FpFiLYOHVhY=\", false, function () {\n  return [useParams];\n});\n_c = DiagrammeScore;\nexport default DiagrammeScore;\nvar _c;\n$RefreshReg$(_c, \"DiagrammeScore\");","map":{"version":3,"names":["React","PureComponent","PieChart","Pie","Sector","Cell","ResponsiveContainer","useParams","useEffect","useState","USER_MAIN_DATA","Modelisation","DiagrammeScore","props","className","data","setData","emptyScore","setEmptyScore","fulldata","setFullData","paramsId","modelisation","formatDataScore","name","value"],"sources":["/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 12/OCR_P12_SPORTSEE/front-end/src/components/DiagrammeScore/index.jsx"],"sourcesContent":["import './style.scss'\nimport React, { PureComponent } from 'react'\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts'\nimport { useParams } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\nimport { USER_MAIN_DATA } from '../../data/mocked-data'\nimport { Modelisation } from '../../data/Modelisation'\n\nconst DiagrammeScore = (props) => {\n  const className = props.className\n\n  const [data, setData] = useState(null)\n  const [emptyScore, setEmptyScore] = useState(null)\n  const [fulldata, setFullData] = useState(null)\n\n  const paramsId = useParams()\n\n  useEffect(() => {\n    const modelisation = new Modelisation(USER_MAIN_DATA)\n    setData(modelisation.formatDataScore(paramsId))\n  }, [])\n\n  useEffect(() => {\n    setEmptyScore({\n      name: 'empty-score',\n      value: 100 - 32,\n      //ajouter style color transparent / enlever legende\n    })\n  }, [])\n\n  useEffect(() => {\n    setFullData([data, emptyScore])\n  }, [])\n\n  // const emptyScore = {\n  //   name: 'empty-score',\n  //   // value: 100 - data.value,\n  //   value: 44,\n  //   //ajouter style color transparent / enlever legende\n  // }\n  //creer une data qui recupere l'espace vide (100-taille data modelisation)\n  // console.log(emptyScore)\n  //creer constante globale data 1 + dataEmpty et call dans return\n  // const fulldata = [data, emptyScore]\n\n  // console.log(fulldata)\n\n  // const data02 = [{ name: 'A1', value: 12 }]\n\n  if (data !== null && emptyScore !== null && fulldata !== null) {\n    return (\n      <div className={`diagrammes-item diagrammes_diagramme-${className}`}>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <PieChart width={400} height={400}>\n            {/* <Pie\n            data={data02}\n            dataKey=\"value\"\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius={70}\n            outerRadius={60}\n            fill=\"black\"\n            label\n          /> */}\n            <Pie\n              data={data}\n              dataKey=\"value\"\n              cx=\"50%\"\n              cy=\"50%\"\n              innerRadius={70}\n              outerRadius={90}\n              fill=\"#FF0000\"\n              label\n            />\n          </PieChart>\n        </ResponsiveContainer>\n      </div>\n    )\n  }\n}\n\nexport default DiagrammeScore\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAC5C,SAASC,QAAQ,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,mBAAmB,QAAQ,UAAU;AAC3E,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,YAAY,QAAQ,yBAAyB;AAAA;AAEtD,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAA;EAChC,MAAMC,SAAS,GAAGD,KAAK,CAACC,SAAS;EAEjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMY,QAAQ,GAAGd,SAAS,EAAE;EAE5BC,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAG,IAAIX,YAAY,CAACD,cAAc,CAAC;IACrDM,OAAO,CAACM,YAAY,CAACC,eAAe,CAACF,QAAQ,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACdU,aAAa,CAAC;MACZM,IAAI,EAAE,aAAa;MACnBC,KAAK,EAAE,GAAG,GAAG;MACb;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACdY,WAAW,CAAC,CAACL,IAAI,EAAEE,UAAU,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA,IAAIF,IAAI,KAAK,IAAI,IAAIE,UAAU,KAAK,IAAI,IAAIE,QAAQ,KAAK,IAAI,EAAE;IAC7D,oBACE;MAAK,SAAS,EAAG,wCAAuCL,SAAU,EAAE;MAAA,uBAClE,QAAC,mBAAmB;QAAC,KAAK,EAAC,MAAM;QAAC,MAAM,EAAC,MAAM;QAAA,uBAC7C,QAAC,QAAQ;UAAC,KAAK,EAAE,GAAI;UAAC,MAAM,EAAE,GAAI;UAAA,uBAWhC,QAAC,GAAG;YACF,IAAI,EAAEC,IAAK;YACX,OAAO,EAAC,OAAO;YACf,EAAE,EAAC,KAAK;YACR,EAAE,EAAC,KAAK;YACR,WAAW,EAAE,EAAG;YAChB,WAAW,EAAE,EAAG;YAChB,IAAI,EAAC,SAAS;YACd,KAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QACL;UAAA;UAAA;UAAA;QAAA;MACO;QAAA;QAAA;QAAA;MAAA;IACS;MAAA;MAAA;MAAA;IAAA,QAClB;EAEV;AACF,CAAC;AAAA,GAvEKH,cAAc;EAAA,QAODL,SAAS;AAAA;AAAA,KAPtBK,cAAc;AAyEpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}